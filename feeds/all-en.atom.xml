<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Ben Cardy</title><link href="/" rel="alternate"></link><link href="/feeds/all-en.atom.xml" rel="self"></link><id>/</id><updated>2023-02-02T00:00:00+00:00</updated><entry><title>SwiftUI: Equal Width Icons</title><link href="/2023/02/02/swiftui-equal-width-icons/" rel="alternate"></link><published>2023-02-02T00:00:00+00:00</published><updated>2023-02-02T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-02-02:/2023/02/02/swiftui-equal-width-icons/</id><summary type="html">&lt;p&gt;Following on from my previous post on &lt;a href="/2023/01/25/swiftui-text-views-and-alignment/"&gt;SwiftUI Text alignment&lt;/a&gt;, I thought I'd post about another common issue I run into and how to solve it relatively simply: equal width icons. This logic applies to any series of Views you want to display equally in either height or width, but …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Following on from my previous post on &lt;a href="/2023/01/25/swiftui-text-views-and-alignment/"&gt;SwiftUI Text alignment&lt;/a&gt;, I thought I'd post about another common issue I run into and how to solve it relatively simply: equal width icons. This logic applies to any series of Views you want to display equally in either height or width, but the most common place it occurs in my own code is when using SF Symbols. Each symbol has its own width, so when using them as bullets or in other situations where you want them to line up it can be infuriating.&lt;/p&gt;
&lt;p&gt;Let's set the stage with some code. The example I'm using is the ubiquitous "What's New" sheet, found in many of Apple's own apps. I've borrowed the text and icons from the latest update to &lt;a href="https://www.penedex.com/"&gt;Penedex&lt;/a&gt;, a pen-tracking app developed by Connor Rose. Here's the sample View:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;VStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;What&amp;#39;s New!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;largeTitle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Version 2023.01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;star.circle.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Star Ratings Toggle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;If you believe all your pens are your favourite, you can now turn off star ratings via Settings.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Share Sheet Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fixed an issue where the date in your Currently Ink&amp;#39;d shared image would not display correctly.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;scroll.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Brand List Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fixed issues with duplicate brands populating your Brand List.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ladybug.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Misc. Bug Fixes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Plenty of other minor improvements.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;A series of repeated sections (don't worry, it'll be much neater by the end of the post), each with an icon, a title and a short summary. It makes use of the &lt;code&gt;fullWidth()&lt;/code&gt; modifier from my &lt;a href="/2023/01/25/swiftui-text-views-and-alignment/"&gt;previous post&lt;/a&gt;. This is how iOS renders it:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/assets/swiftui-equal/initial.png"&gt;&lt;/p&gt;
&lt;p&gt;As a starter for ten, this is pretty good! But the scroll icon is wider than the previous two, and the ladybird icon even wider still. This pushes the text out to the right and it no longer lines up. We could manually define a width for the icon:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Share Sheet Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Fixed an issue where the date in your Currently Ink&amp;#39;d shared image would not display correctly.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;(From now on, I'm only going to show the code for one of the four sections. The others are identical in all but the content.)&lt;/p&gt;
&lt;p&gt;Yay, that works!&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/assets/swiftui-equal/manual-width.png"&gt;&lt;/p&gt;
&lt;p&gt;But it's a bit of a "magic number", and one that would likely need to be tweaked should you change the icons at a later date. Not to mention that it just won't scale with the icon if the user adjusts the text size on their iOS device. We can do better than that.&lt;/p&gt;
&lt;p&gt;There's three parts to the solution. We need to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;read the width of each icon,&lt;/li&gt;
&lt;li&gt;store the maximum of those widths somewhere, and&lt;/li&gt;
&lt;li&gt;set the width of each icon to that maximum.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let's take these one at a time.&lt;/p&gt;
&lt;h4&gt;Read the width of each icon&lt;/h4&gt;
&lt;p&gt;This is easily achieved using a &lt;code&gt;GeometryReader&lt;/code&gt;. I have a bit of a love/hate relationship with this SwiftUI utility, but in this case it works very well. Appyling it as a background to the icon means it will grow to match the size of the icon's view, and we can read the frame's size:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GeometryReader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="c1"&gt;// geo.size.width is the width of the icon&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But what we can do with that value?&lt;/p&gt;
&lt;h4&gt;Store the maximum width&lt;/h4&gt;
&lt;p&gt;In order to calculate the maximum, we need a couple of things. We need a State variable for the max icon width, and let's give it a sensible default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And we need a way to accumulate the values read by each &lt;code&gt;GeometryReader&lt;/code&gt; and take the maximum for our &lt;code&gt;iconWidth&lt;/code&gt; variable. SwiftUI provides us with just the thing: a &lt;a href="https://developer.apple.com/documentation/swiftui/preferencekey"&gt;&lt;code&gt;PreferenceKey&lt;/code&gt;&lt;/a&gt;. This is a strange bit of SwiftUI that allows us to combine a number of values into a single one, and store it somewhere. First, we need to define a custom &lt;code&gt;PreferenceKey&lt;/code&gt;, with a &lt;code&gt;reduce&lt;/code&gt; function that returns the maximum of the values it is passed. I like to do this on an extension of the main view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;EqualWidthIcons&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;PreferenceKey&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;defaultValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
        &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;reduce&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kr"&gt;inout&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nextValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;nextValue&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code here is a little odd, but the important part is the call to &lt;code&gt;max&lt;/code&gt;, setting the &lt;code&gt;value&lt;/code&gt; variable to the maximum of either what it was before, or the value it has just been passed (the result of the &lt;code&gt;nextValue()&lt;/code&gt; call).&lt;/p&gt;
&lt;p&gt;Now we need to use this &lt;code&gt;PreferenceKey&lt;/code&gt; in our &lt;code&gt;GeometryReader&lt;/code&gt;. To do so, we have to call &lt;code&gt;.preference(key:value:)&lt;/code&gt; on a View. We can place an invisible view in the &lt;code&gt;GeometryReader&lt;/code&gt; and use it there:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GeometryReader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Applying this to each icon will propagate the maxiumum size up into our &lt;code&gt;EqualWidthIcons.IconWidthPreferenceKey&lt;/code&gt;.&lt;/p&gt;
&lt;h4&gt;Set the width of each icon&lt;/h4&gt;
&lt;p&gt;Now all that's left is to set the width of each icon to that maximum. Remember the State variable we created for it previously? We can watch for changes to the &lt;code&gt;PreferenceKey&lt;/code&gt; and update it accordingly. I like to do this on the highest view in the hierarchy, the immediate one returned by &lt;code&gt;body&lt;/code&gt; (in this case, that's the outer &lt;code&gt;VStack&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;VStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;// Rest of view...&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onPreferenceChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
        &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iconWidth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Finally, update each icon to use this value as its width. It's important that we set the frame &lt;em&gt;after&lt;/em&gt; the &lt;code&gt;GeometryReader&lt;/code&gt; background.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GeometryReader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And voila! Each icon has the same width, and will scale along with dynamic type as specified by the user.&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/assets/swiftui-equal/fixed.png"&gt;&lt;/p&gt;
&lt;h4&gt;Cleaning up&lt;/h4&gt;
&lt;p&gt;This works great, but we have a fair bit of duplicated code. We did already, but since we've added the &lt;code&gt;background&lt;/code&gt;, &lt;code&gt;GeometryReader&lt;/code&gt;, and &lt;code&gt;frame&lt;/code&gt; definitions, the sections have become fairly unwieldy. It's probably time we split it out into its own view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="n"&gt;GeometryReader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
                        &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;}&lt;/span&gt;
                &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//              How do we read the iconWidth here?&lt;/span&gt;
&lt;span class="c1"&gt;//              .frame(width: iconWidth)&lt;/span&gt;
            &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This dramatically reduces the size of the original view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;

            &lt;span class="n"&gt;VStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;What&amp;#39;s New!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;largeTitle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Version 2023.01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;star.circle.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Star Ratings Toggle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;If you believe all your pens are your favourite, you can now turn off star ratings via Settings.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Share Sheet Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fixed an issue where the date in your Currently Ink&amp;#39;d shared image would not display correctly.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;scroll.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Brand List Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fixed issues with duplicate brands populating your Brand List.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ladybug.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Misc. Bug Fixes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Plenty of other minor improvements.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onPreferenceChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;iconWidth&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;But you may have noticed the question in the comments in the &lt;code&gt;WhatsNewSection&lt;/code&gt; code: where do we read &lt;code&gt;iconWidth&lt;/code&gt; from now?&lt;/p&gt;
&lt;p&gt;We have to pass it down as a binding from the parent view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;Binding&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;CGFloat&lt;/span&gt;
    &lt;span class="c1"&gt;// Rest of view... &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Read it as usual to set the icon's frame:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;background&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GeometryReader&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
            &lt;span class="n"&gt;Color&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;clear&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preference&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EqualWidthIcons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;IconWidthPreferenceKey&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;width&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And finally, pass the binding through from the main view:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;WhatsNewSection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;star.circle.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Star Ratings Toggle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;If you believe all your pens are your favourite, you can now turn off star ratings via Settings.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;iconWidth&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3&gt;A better alternative&lt;/h3&gt;
&lt;p&gt;For this particular situation, we can actually do away with the &lt;code&gt;PreferenceKey&lt;/code&gt; entirely, if we switch our layout to using a &lt;code&gt;Grid&lt;/code&gt;. Grids automatically size the width of their columns based on the widest cell within the column, which is exactly what we want. Here's a verison of the code using &lt;code&gt;Grid&lt;/code&gt; instead:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;WhatsNewGridRow&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Color&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;GridRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Image&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;systemName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;GridWidthIcons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;VStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;What&amp;#39;s New!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;largeTitle&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Version 2023.01&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;Grid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;horizontalSpacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;verticalSpacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="n"&gt;WhatsNewGridRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;star.circle.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;yellow&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Star Ratings Toggle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;If you believe all your pens are your favourite, you can now turn off star ratings via Settings.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;WhatsNewGridRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;square.and.arrow.up.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Share Sheet Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fixed an issue where the date in your Currently Ink&amp;#39;d shared image would not display correctly.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;WhatsNewGridRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;scroll.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Brand List Fix&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Fixed issues with duplicate brands populating your Brand List.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="n"&gt;WhatsNewGridRow&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;icon&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;ladybug.fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;iconColor&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Misc. Bug Fixes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;summary&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Plenty of other minor improvements.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The result is identical, with a little less code a lot less complexity. However, there are still some situations where you want icons or other views to match widths or heights but a grid isn't appropriate—there may be other content between the views, for example, that you don't want conforming to a grid—so the &lt;code&gt;PreferenceKey&lt;/code&gt; method is still valuable to know.&lt;/p&gt;
&lt;p&gt;The full code for both solutions can be found &lt;a href="https://gist.github.com/benbacardi/4df235736f03cd4cda5cc32d828a9298"&gt;on Github&lt;/a&gt;.&lt;/p&gt;</content><category term="Development"></category><category term="Swift"></category></entry><entry><title>SwiftUI Text Views and Alignment</title><link href="/2023/01/25/swiftui-text-views-and-alignment/" rel="alternate"></link><published>2023-01-25T00:00:00+00:00</published><updated>2023-01-25T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-01-25:/2023/01/25/swiftui-text-views-and-alignment/</id><summary type="html">&lt;p&gt;There's no doubting that SwiftUI makes app development fast and easy—I certainly wouldn't have two apps on the store by now without it—but it's not without its sharp edges and unexpected behaviours.&lt;/p&gt;
&lt;p&gt;One of these that I ran into pretty early on is how &lt;code&gt;Text&lt;/code&gt; views behave, particularly …&lt;/p&gt;</summary><content type="html">&lt;p&gt;There's no doubting that SwiftUI makes app development fast and easy—I certainly wouldn't have two apps on the store by now without it—but it's not without its sharp edges and unexpected behaviours.&lt;/p&gt;
&lt;p&gt;One of these that I ran into pretty early on is how &lt;code&gt;Text&lt;/code&gt; views behave, particularly with regard to alignment and how it lays itself out when text spills over more than one line. &lt;/p&gt;
&lt;h2&gt;Simple &lt;code&gt;Text&lt;/code&gt; views&lt;/h2&gt;
&lt;p&gt;Putting a bare &lt;code&gt;Text&lt;/code&gt; view on the screen, and it'll be centered by default:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/single.png"&gt;&lt;/p&gt;
&lt;p&gt;Putting a border around the &lt;code&gt;Text&lt;/code&gt; view shows us what the boundaries of the view's frame are, and they hug the text as tightly as possible. The &lt;code&gt;Text&lt;/code&gt;'s frame doesn't expand to fill all the available space; only what is necessary.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Hello, World!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/single-border.png"&gt;&lt;/p&gt;
&lt;p&gt;If the text flows onto multiple lines, it will be left-aligned, and expand to fill the width available before wrapping the text:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/single-full-plus-border.png"&gt;&lt;/p&gt;
&lt;p&gt;In this particular case, the frame has expanded to fill the entire width of the screen—but this is only because the second line happens to fit exactly. The frame still &lt;strong&gt;wants&lt;/strong&gt; to be centered, as you can see by adjusting the paragraph slightly:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do abore et dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/single-almost-full-plus-border.png"&gt;&lt;/p&gt;
&lt;p&gt;This is often &lt;strong&gt;not&lt;/strong&gt; the behaviour we want from our views! If we had multiple paragraphs, or different sections as part of a stack, they wouldn't necessarily be aligned with each other, and it's entirely dependent on exactly what words are in each and where the line breaks fall.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do abore et dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, sed do abore dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/multiple.png"&gt;&lt;/p&gt;
&lt;p&gt;With the borders on, you can clearly see what's going on:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do abore et dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Lorem ipsum dolor sit amet, sed do abore dolore magna aliqua.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/multiple-plus-borders.png"&gt;&lt;/p&gt;
&lt;h2&gt;A real world example&lt;/h2&gt;
&lt;p&gt;Let's use a less contrived example: a settings page, with multiple different settings each with explanatory text. For lack of imagination, I've borrowed the settings and text from &lt;a href="http://david-smith.org/"&gt;_DavidSmith&lt;/a&gt;'s Pedometer++ app (inspired by a &lt;a href="https://david-smith.org/blog/2023/01/20/design-notes-17/"&gt;recent post&lt;/a&gt; in his excellent &lt;a href="https://david-smith.org/dnd/"&gt;Design Notes Diary&lt;/a&gt; series).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;When enabled, activity streaks will not be broken by a single day missed after six consecutive days of reaching your goal.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;allowRestDays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Unbroken Streaks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;HStack&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Spacer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Have Pedometer++ use your Apple Watch to measure your daily wheelchair push counts rather than steps.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;allowRestDays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Steps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Pushes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/settings-page.png"&gt;&lt;/p&gt;
&lt;p&gt;In order to left-align the settings headers, I've wrapped them in an &lt;code&gt;HStack&lt;/code&gt; and followed them by a &lt;code&gt;Spacer&lt;/code&gt;. There is a better way that we'll come to later, but for now you can clearly see that the two explanatory paragraphs don't align with each other, or with their surrounding content!&lt;/p&gt;
&lt;p&gt;Adding borders in, it's obvious why:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/settings-page-plus-borders.png"&gt;&lt;/p&gt;
&lt;h2&gt;Fixing the alignment problems&lt;/h2&gt;
&lt;p&gt;We &lt;em&gt;could&lt;/em&gt; fix this in the same way that we pushed the titles to the left - but a better way would be to use the &lt;code&gt;frame&lt;/code&gt; modifier on the &lt;code&gt;Text&lt;/code&gt; views to tell them to expand to take all available space horizontally, rather than just what they require. This is a technique we can also use on the headings.&lt;/p&gt;
&lt;p&gt;We can do this by using &lt;code&gt;.frame(minWidth: 0, maxWidth: .infinity, alignment: .leading)&lt;/code&gt;, telling SwiftUI that we want the frame to fill the entire width of its container, and align the text inside it to the left. In the code below, I've added it to four places: the two headers, and the two paragraphs.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;When enabled, activity streaks will not be broken by a single day missed after six consecutive days of reaching your goal.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;allowRestDays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Unbroken Streaks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Have Pedometer++ use your Apple Watch to measure your daily wheelchair push counts rather than steps.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;allowRestDays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Steps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Pushes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/final.png"&gt;&lt;/p&gt;
&lt;p&gt;Once again, putting the borders back in, it's clear what's now going on:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="/assets/swiftui-text/final-plus-borders.png"&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;A brief note about the way &lt;code&gt;alignment:&lt;/code&gt; works within the &lt;code&gt;frame&lt;/code&gt; modifier: it is not for aligning the text, it is for aligning &lt;strong&gt;the view within the frame&lt;/strong&gt;. When we say &lt;code&gt;.frame(minWidth: 0, maxWidth: .infinity, alignment: .leading)&lt;/code&gt;, despite what it looks like, we're not actually asking SwiftUI to change the size of the &lt;code&gt;Text&lt;/code&gt; view—instead, we're asking SwiftUI to place that view within a frame that takes up the specified space, and place it at the left of the space. If we put a border around the &lt;code&gt;Text&lt;/code&gt; view &lt;strong&gt;before&lt;/strong&gt; the frame modifier (green), and another &lt;strong&gt;after&lt;/strong&gt; (red), we can see what SwiftUI is doing under the hood:&lt;/p&gt;
&lt;p&gt;```swift
Text("Allow Rest Days")
    .font(.headline)
    .border(.green)
    .frame(minWidth: 0, maxWidth: .infinity, alignment: .leading)
    .border(.red)
Text("When enabled, activity streaks will not be broken by a single day missed after six consecutive days of reaching your goal.")
    .border(.green)
    .frame(minWidth: 0, maxWidth: .infinity, alignment: .leading)
    .border(.red)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="p"&gt;[](&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;assets&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;swiftui&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;border&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;png&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="o"&gt;---&lt;/span&gt;

&lt;span class="c1"&gt;## A neat solution&lt;/span&gt;

&lt;span class="n"&gt;In&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fact&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;this&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;such&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;common&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;thing&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;want&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;do&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="err"&gt;`&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;views&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;within&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;my&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;apps&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;that&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;I&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ve written a small view modifier to handle it. Typing `.frame(minWidth: 0, maxWidth: .infinity, alignment: .leading)` in so many places is a pain in the backside.&lt;/span&gt;

&lt;span class="err"&gt;```&lt;/span&gt;&lt;span class="n"&gt;swift&lt;/span&gt;
&lt;span class="n"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FullWidthText&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ViewModifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TextAlignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;frameAlignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Alignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;switch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;trailing&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;center&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Content&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;content&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;multilineTextAlignment&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;maxWidth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;infinity&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;frameAlignment&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="n"&gt;extension&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;func&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TextAlignment&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;leading&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;some&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;View&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;FullWidthText&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now we can clean up our previous code, producing the same result but with a much neater and easier to remember view modifier:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;VStack&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;spacing&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;When enabled, activity streaks will not be broken by a single day missed after six consecutive days of reaching your goal.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Allow Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;allowRestDays&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Rest Days&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Unbroken Streaks&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="n"&gt;GroupBox&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;headline&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Have Pedometer++ use your Apple Watch to measure your daily wheelchair push counts rather than steps.&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fullWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;Picker&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Wheelchair Mode&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;selection&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;wheelchairMode&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Steps&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Pushes&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;tag&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pickerStyle&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;segmented&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;As you may have noticed, it also supports providing the other &lt;code&gt;TextAlignment&lt;/code&gt; options for multiline text, passed to the &lt;code&gt;.fullWidth(alignment:)&lt;/code&gt; videw modifier: &lt;code&gt;.leading&lt;/code&gt; (the default), &lt;code&gt;.centered&lt;/code&gt;, and &lt;code&gt;.trailing&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Hopefully this can be of some use to you and help clear up some of the oddities surrounding the layout of text in SwiftUI! If you do find it helpful, I'd love for you to &lt;a href="https://snailedit.social/@benbacardi"&gt;let me know&lt;/a&gt;.&lt;/p&gt;</content><category term="Development"></category><category term="Swift"></category></entry><entry><title>Diamine Inkvent 2022</title><link href="/2023/01/21/diamine-inkvent-2022/" rel="alternate"></link><published>2023-01-21T00:00:00+00:00</published><updated>2023-01-21T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-01-21:/2023/01/21/diamine-inkvent-2022/</id><summary type="html">&lt;p&gt;The Diamine Inkvent advent calendars are something I never imagined existed—24 small 12ml bottles of unique ink, and one 30ml bottle on Christmas Day. 2022 was the second year they produced one, and although I didn't buy one for advent itself, I did pick one up at half price …&lt;/p&gt;</summary><content type="html">&lt;p&gt;The Diamine Inkvent advent calendars are something I never imagined existed—24 small 12ml bottles of unique ink, and one 30ml bottle on Christmas Day. 2022 was the second year they produced one, and although I didn't buy one for advent itself, I did pick one up at half price a couple of days after Christmas from &lt;a href="https://www.cultpens.com"&gt;Cult Pens&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The little 12ml bottles are adorably cute, and all the inks are somewhat Christmas- or winter-themed in name. I opened the calendar all in one go, and spent half an hour one afternoon swatching every ink. I can recommend a dip pen if you're going to do this—I used a Lamy Safari, dipping the nib into each bottle in turn, but thanks to the feed it was a bit more of a pain to clean between inks than a proper dip pen would have been.&lt;/p&gt;
&lt;p&gt;&lt;a href="/assets/diamine-inkvent-2022.png"&gt;&lt;img alt="Diamine Inkvent 2022 swatches" src="/assets/diamine-inkvent-2022.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I swabbed three to a swatch for my homemade &lt;a href="https://wellappointeddesk.bigcartel.com/product/col-o-ring-ink-testing-book"&gt;col-o-ring&lt;/a&gt;, and gave the large 30ml bottle its own. These are cards I've cut from 350gsm watercolour postcards, rounded the corners using a &lt;a href="https://www.amazon.co.uk/dp/B09LHVFGVP"&gt;corner punch&lt;/a&gt;, and punched a hole in to thread them through a keyring. The result is a fantastic way to flick through my available inks and make a choice, and I love having it as something to play with sitting on my desk:&lt;/p&gt;
&lt;p&gt;&lt;a href="/assets/col-o-ring.png"&gt;&lt;img alt="My homemade col-o-ring ink swatches" src="/assets/col-o-ring.png"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Speaking of which, how beautiful is that Van Diemen's &lt;a href="https://www.vandiemansink.com.au/products/van-diemans-the-wilderness-series-azzure-kingfisher-30ml-shimmer-ink?shpxid=c58d90cd-9c27-4430-a56c-7f74146176c1"&gt;Azure Kingfisher&lt;/a&gt; from the &lt;a href="https://www.vandiemansink.com.au/collections/the-wilderness-series"&gt;Wilderness Series&lt;/a&gt;? It has such a beautiful golden shimmer and a slight red sheen. It was a birthday gift from a couple of wonderful friends, along with a custom pen from &lt;a href="https://www.instagram.com/justturnings/"&gt;Just Turnings&lt;/a&gt; that matches it perfectly, and shows off its properties fantastically with a broad nib.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;I'm not sure I'm likely to buy the advent calendar full price next Christmas—it is a fair amount of money, and I have many inks I still haven't used yet from it—but I think they're a fantastic idea from Diamine. Judging by last year, they'll be selling each of the colours individually later in the year in larger bottles, so if there's any that really take my fancy I don't need to worry about 12ml not going particularly far.&lt;/p&gt;
&lt;p&gt;So far, my favourite is Flame, but I am particularly partial to a good orange. What's yours?&lt;/p&gt;</content><category term="Pens &amp; Ink"></category></entry><entry><title>Swift Charts &amp; Calendar Weekdays</title><link href="/2023/01/20/swift-charts-calendar-weekdays/" rel="alternate"></link><published>2023-01-20T16:30:00+00:00</published><updated>2023-01-20T16:30:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-01-20:/2023/01/20/swift-charts-calendar-weekdays/</id><summary type="html">&lt;p&gt;I've recently been working on adding a statistics section to &lt;a href="/pendulum/"&gt;Pendulum&lt;/a&gt;, the pen pal tracking app I develop with my friend &lt;a href="https://418teapot.net"&gt;Alex&lt;/a&gt;. This seemed like the perfect opportunity to use &lt;a href="https://developer.apple.com/documentation/charts"&gt;Swift Charts&lt;/a&gt;, Apple's new charting framework.&lt;/p&gt;
&lt;p&gt;I ultimately wanted to end up with a graph like the following:&lt;/p&gt;
&lt;p&gt;&lt;a href="/assets/pendulum-weekday-chart.jpeg"&gt;&lt;img alt="Bar chart showing the number of letters written and sent per day of the week" src="/assets/pendulum-weekday-chart.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swift Charts …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I've recently been working on adding a statistics section to &lt;a href="/pendulum/"&gt;Pendulum&lt;/a&gt;, the pen pal tracking app I develop with my friend &lt;a href="https://418teapot.net"&gt;Alex&lt;/a&gt;. This seemed like the perfect opportunity to use &lt;a href="https://developer.apple.com/documentation/charts"&gt;Swift Charts&lt;/a&gt;, Apple's new charting framework.&lt;/p&gt;
&lt;p&gt;I ultimately wanted to end up with a graph like the following:&lt;/p&gt;
&lt;p&gt;&lt;a href="/assets/pendulum-weekday-chart.jpeg"&gt;&lt;img alt="Bar chart showing the number of letters written and sent per day of the week" src="/assets/pendulum-weekday-chart.jpeg"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Swift Charts can perfectly handle multiple datasets on one graph, but the problem I ran into was that it doesn't seem to have a way to natively aggregate data per &lt;em&gt;day of the week&lt;/em&gt;. If I only had seven days worth of data, it would be fine—I could display just the day name on the axis, and no days would be repeated because I wouldn't be displaying more than a week of data. However, as I want to aggregate every event, this wasn't going to work. I decided to do the grouping of the data myself, and just pass Swift Charts a pre-binned dataset for it to present, where it wouldn't have to worry about dates at all.&lt;/p&gt;
&lt;p&gt;I had one other problem I wanted to solve: I wanted the graph to start on whatever the current locale thinks the start of the week is&lt;sup id="fnref:1"&gt;&lt;a class="footnote-ref" href="#fn:1"&gt;1&lt;/a&gt;&lt;/sup&gt;. For us in the UK and Europe, we generally consider Monday the beginning of the week, as reflected in the graph above. But for the US, it should probably start with Sunday.&lt;/p&gt;
&lt;p&gt;In order to generate the seven "bins" for the chart to show, I could use the handy &lt;code&gt;Calendar.current.shortWeekdaySymbols&lt;/code&gt; property, which produces an array of the shortened names of the week, properly localised to the user's current locale. However, regardless of locale, this array always starts with Sunday and ends with Saturday. There's another property of the calendar, &lt;code&gt;.firstWeekday&lt;/code&gt;, that returns a number between 1 (for Sunday) and 7 (for Saturday) representing what the locale considers to be the first day of the week. Using this, I can shift the array from &lt;code&gt;shortWeekdaySymbols&lt;/code&gt; to produce the output in the right order. I decided to wrap both these pieces of information up in an enum to represent each day of the week:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="nc"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;CaseIterable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;sun&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;mon&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;tue&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;wed&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;thu&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;fri&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;sat&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;

    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;shortName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Calendar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shortWeekdaySymbols&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;orderedCases&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kc"&gt;Self&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;allCases&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shiftRight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Calendar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;firstWeekday&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You'll also notice I'm using an extension to &lt;code&gt;Array&lt;/code&gt; that allows me to shift an array, wrapping the values around to the end as they get popped off the front:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;Array&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;func&lt;/span&gt; &lt;span class="nf"&gt;shiftRight&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;-&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Element&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;guard&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;self&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt;
        &lt;span class="bp"&gt;assert&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt; &lt;span class="o"&gt;~=&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;Shift amount out of bounds&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;Array&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;amount&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;..&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="n"&gt;amount&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now that I have an enum I can use to represent the days of the week correctly, and order them as defined  by the user's locale, I needed to use this somehow to generate data to pass to the chart. I started off by defining a struct to hold a single datapoint:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Identifiable&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EventType&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Weekday&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s"&gt;-&lt;/span&gt;&lt;span class="si"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Here, &lt;code&gt;EventType&lt;/code&gt; is an internal enum used by Pendulum to mark whether the event was a letter being sent, written, received, etc. What makes each data point unique in the chart is the combination of the day of the week, and the event type, so I combine those two together as the &lt;code&gt;id&lt;/code&gt; for the struct.&lt;/p&gt;
&lt;p&gt;Next, I needed to fetch the data and group it into buckets:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;days&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;]]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[:]&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;event&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fetch&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;withStatus&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;keys&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="bp"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrappedDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrappedDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
     &lt;span class="p"&gt;}&lt;/span&gt;
     &lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wrappedDate&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;]?.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;event&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I start by defining a dictionary mapping weekdays to an array of events, and then looping over the events I'm interested in and adding them to the corresponding weekday key in the dictionary. This necessitated another extension to a &lt;code&gt;Foundation&lt;/code&gt; object, this time on &lt;code&gt;Date&lt;/code&gt;&lt;sup id="fnref:2"&gt;&lt;a class="footnote-ref" href="#fn:2"&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;Date&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;dayNumberOfWeek&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;?&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Calendar&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;current&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dateComponents&lt;/span&gt;&lt;span class="p"&gt;([.&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;self&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="n"&gt;weekday&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;weekday&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Weekday&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;dayNumberOfWeek&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This uses the &lt;code&gt;.weekday&lt;/code&gt; date component from the user's current calendar, which returns the same 1–7 index as used by &lt;code&gt;.firstWeekday&lt;/code&gt;, and returns the corresponding &lt;code&gt;Weekday&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;With the data correctly bucketed, it was time to sum up the series and create the datapoints for the chart. When the data provided is not sequential (such as a series of dates) but is instead discrete (such as list of names, for example) Swift Charts will draw the bars in the order in which it first encounters them. You may think that weekdays are sequential—and you'd be right—but in this case, they're not an object that Swift Charts understands in that way. So to draw the chart as intended, we need to create a &lt;code&gt;StatusCountByDay&lt;/code&gt; instance for each weekday in the order we want. We also need to include one even when the count for that day is zero, because we don't want the chart to just skip a day. I do this by looping over the weekdays ordered according to the locale, inside that looping over each event type, and calculating the sum for each:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;results&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;eventType&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="n"&gt;Weekday&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;orderedCases&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;count&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;days&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[]).&lt;/span&gt;&lt;span class="bp"&gt;filter&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt; &lt;span class="p"&gt;==&lt;/span&gt; &lt;span class="n"&gt;eventType&lt;/span&gt; &lt;span class="p"&gt;}.&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt;
        &lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;eventType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Ultimately, we end up with a series of data like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sun&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;wed&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;thu&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;fri&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
    &lt;span class="n"&gt;StatusCountByDay&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sat&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;All that's left is to pass that to Swift Charts, for which I'll break down each section after I show the code:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Chart&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;results&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
    &lt;span class="n"&gt;BarMark&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
        &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Day&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;day&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shortName&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
        &lt;span class="n"&gt;y&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Count&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;annotation&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;alignment&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt; &lt;span class="o"&gt;!=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;\(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="bp"&gt;count&lt;/span&gt;&lt;span class="si"&gt;)&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;font&lt;/span&gt;&lt;span class="p"&gt;(.&lt;/span&gt;&lt;span class="n"&gt;footnote&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundColor&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;opacity&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;foregroundStyle&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;event&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actionableTextShort&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;position&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;by&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;event&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actionableTextShort&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;chartForegroundStyleScale&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;
    &lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actionableTextShort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sent&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;actionableTextShort&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;EventType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;written&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Firstly, we want a bar chart, so the correct type of mark to use is a &lt;code&gt;BarMark&lt;/code&gt;. The &lt;code&gt;x&lt;/code&gt; axis is the short name of the weekday ("Mon", "Tue", etc), and the &lt;code&gt;y&lt;/code&gt; axis is the count.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;.annotation&lt;/code&gt; section puts the little figures above each bar, and isn't particularly necessary but I liked the way it looked.&lt;/p&gt;
&lt;p&gt;The two &lt;code&gt;BarMark&lt;/code&gt; modifiers &lt;code&gt;.foregroundStyle(by:)&lt;/code&gt; and &lt;code&gt;.position(by:)&lt;/code&gt; both tell Swift Charts how to define and handle each series independently; otherwise, they'd be a single bar, stacked on top of each other within each day. Grouping them by event type, the first modifier tells them to be different colours, and the second puts them as independent bars side by side instead of on top of each other. I use &lt;code&gt;data.status.actionableTextShort&lt;/code&gt; as the value to distinguish the data by, because that is what I want shown in the legend beneath the chart ("Sent" vs "Written", etc).&lt;/p&gt;
&lt;p&gt;You can see below the results of the chart without the &lt;code&gt;.position(by:)&lt;/code&gt; modifier, and without the &lt;code&gt;.foregroundStyle(by:)&lt;/code&gt; modifier, respectively.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The chart without each modifier" src="/assets/pendulum-chart-modifiers.png"&gt;&lt;/p&gt;
&lt;p&gt;Finally, the &lt;code&gt;.chartForegroundStyleScale&lt;/code&gt; modifier defines the colours to be used for each series, which is a dictionary mapping the name of the series to its colour. In this case, I use want them using the colour defined for the event type, to keep it consistent with the rest of the app.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;I'm quite impressed with Swift Charts and how easy it makes drawing a good looking chart, but there are definitely some things that could be more obvious about it. The lack of decent documentation &lt;em&gt;with plenty of examples and screenshots&lt;/em&gt; being a very clear area for improvement!&lt;/p&gt;
&lt;hr&gt;
&lt;div class="footnote"&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id="fn:1"&gt;
&lt;p&gt;Yes, I realise none of the rest of the app is localised. Baby steps, though!&amp;#160;&lt;a class="footnote-backref" href="#fnref:1" title="Jump back to footnote 1 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id="fn:2"&gt;
&lt;p&gt;As you may have realised by now, I'm quite a fan of writing extensions to standard types for common functions that could end up being performed regularly. They make the rest of the code a lot cleaner. It's one of my favourite features of Swift.&amp;#160;&lt;a class="footnote-backref" href="#fnref:2" title="Jump back to footnote 2 in the text"&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;</content><category term="Development"></category><category term="Swift"></category></entry><entry><title>Review: LEGO Monster Jam Trucks</title><link href="/2023/01/20/review-lego-monster-jam-trucks/" rel="alternate"></link><published>2023-01-20T00:00:00+00:00</published><updated>2023-01-20T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-01-20:/2023/01/20/review-lego-monster-jam-trucks/</id><summary type="html">&lt;p&gt;Recently, two more reviews of mine went up on Brickset: one for &lt;a href="https://brickset.com/article/88534/review-42149-monster-jam-dragon"&gt;42149 Monster Jam Dragon&lt;/a&gt; and the other for its counterpart, &lt;a href="https://brickset.com/article/88535/review-42150-monster-jam-monster-mutt-dalmation"&gt;42150 Monster Jam Monster Mutt Dalmation&lt;/a&gt;. They're part of a small series that LEGO has released over the past few years, with two pull-back-and-go Technic monster trucks from …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, two more reviews of mine went up on Brickset: one for &lt;a href="https://brickset.com/article/88534/review-42149-monster-jam-dragon"&gt;42149 Monster Jam Dragon&lt;/a&gt; and the other for its counterpart, &lt;a href="https://brickset.com/article/88535/review-42150-monster-jam-monster-mutt-dalmation"&gt;42150 Monster Jam Monster Mutt Dalmation&lt;/a&gt;. They're part of a small series that LEGO has released over the past few years, with two pull-back-and-go Technic monster trucks from the &lt;a href="https://www.monsterjam.com"&gt;Monster Jam&lt;/a&gt; sport. Spoilers for the reviews, but I think they're great little "intro to Technic" sets, and you can't go wrong at less than £18.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Monster Jam LEGO Sets" src="https://images.brickset.com/news/88534_IMG_1897.jpg"&gt;&lt;/p&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>Review: 40651 Australia Postcard</title><link href="/2023/01/03/review-40651-australia-postcard/" rel="alternate"></link><published>2023-01-03T00:00:00+00:00</published><updated>2023-01-03T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2023-01-03:/2023/01/03/review-40651-australia-postcard/</id><summary type="html">&lt;p&gt;I've quite liked the previous sets in the LEGO Postcard series, so it was good to get a chance to review the latest, &lt;a href="https://brickset.com/sets/40651-1"&gt;40651&lt;/a&gt; Australia, even if it's a &lt;a href="https://brickset.com/article/88236/review-40651-australia-postcard"&gt;slight departure from the rest&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The designers have chosen to represent the entirety of Australia with a small shack, a windpump …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I've quite liked the previous sets in the LEGO Postcard series, so it was good to get a chance to review the latest, &lt;a href="https://brickset.com/sets/40651-1"&gt;40651&lt;/a&gt; Australia, even if it's a &lt;a href="https://brickset.com/article/88236/review-40651-australia-postcard"&gt;slight departure from the rest&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The designers have chosen to represent the entirety of Australia with a small shack, a windpump, an outdoor toilet, a large tree with a cockatoo, and a sign warning of kangaroos. There's also a Qantas plane flying through the bright blue sky, and small colourful plants growing around the ground.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Australia Postcard LEGO set" src="https://images.brickset.com/news/88236_IMG_1873.jpg"&gt;&lt;/p&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>Brickset LEGO Gift Guide - $50 and up</title><link href="/2022/11/23/brickset-lego-gift-guide-50-and-up/" rel="alternate"></link><published>2022-11-23T00:00:00+00:00</published><updated>2022-11-23T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-11-23:/2022/11/23/brickset-lego-gift-guide-50-and-up/</id><content type="html">&lt;p&gt;The last two holiday gift guides have been published at Brickset, where we've chosen a number of sets in a variety of price brackets. Go and check out the sets between &lt;a href="https://brickset.com/article/84508/holiday-gift-guide-50-100"&gt;$50 to $100&lt;/a&gt;, &lt;a href="https://brickset.com/article/84509/holiday-gift-guide-100-200"&gt;$100 to $200&lt;/a&gt;, and &lt;a href="https://brickset.com/article/84510/holiday-gift-guide-over-200"&gt;$200 and up!&lt;/a&gt;&lt;/p&gt;</content><category term="LEGO"></category></entry><entry><title>Brickset LEGO Gift Guide</title><link href="/2022/11/20/brickset-lego-gift-guide/" rel="alternate"></link><published>2022-11-20T00:00:00+00:00</published><updated>2022-11-20T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-11-20:/2022/11/20/brickset-lego-gift-guide/</id><content type="html">&lt;p&gt;Brickset have started publishing their annual Gift Guide, and this year Huw asked for my thoughts to be included. So far, guides for the first two price ranges have been released, for sets &lt;a href="https://brickset.com/article/84506/holiday-gift-guide-under-25"&gt;under $25&lt;/a&gt; and sets priced &lt;a href="https://brickset.com/article/84507/holiday-gift-guide-25-50"&gt;between $25 and $50&lt;/a&gt;. Click through to see my recommendations!&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://images.brickset.com/news/84506_hgg2.jpg"&gt;&lt;/p&gt;</content><category term="LEGO"></category></entry><entry><title>Review: 71409 Big Spike's Cloudtop Challenge</title><link href="/2022/10/28/review-71409-big-spikes-cloudtop-challenge/" rel="alternate"></link><published>2022-10-28T00:00:00+01:00</published><updated>2022-10-28T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-28:/2022/10/28/review-71409-big-spikes-cloudtop-challenge/</id><summary type="html">&lt;p&gt;The last of this round of Super Mario LEGO sets to review, &lt;a href="https://brickset.com/sets/71409-1"&gt;71409&lt;/a&gt; Big Spike's Cloudtop Challenge:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LEGO keep on producing Super Mario expansion sets to add to what is clearly a popular theme for them—this year they have released &lt;a href="https://brickset.com/sets/subtheme-Expansion-Set/year-2022"&gt;14 distinct sets&lt;/a&gt; in the range so far. &lt;a href="https://brickset.com/sets/71409-1"&gt;71409 …&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;The last of this round of Super Mario LEGO sets to review, &lt;a href="https://brickset.com/sets/71409-1"&gt;71409&lt;/a&gt; Big Spike's Cloudtop Challenge:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;LEGO keep on producing Super Mario expansion sets to add to what is clearly a popular theme for them—this year they have released &lt;a href="https://brickset.com/sets/subtheme-Expansion-Set/year-2022"&gt;14 distinct sets&lt;/a&gt; in the range so far. &lt;a href="https://brickset.com/sets/71409-1"&gt;71409&lt;/a&gt; Big Spike's Cloudtop Challenge is one of the largest, with 540 parts, and packs a decent punch: three opponents, two of which are new, and some fun takes on the interactivity and game play we've come to expect with these sets.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Big Spike's Cloudtop Challenge LEGO set" src="https://images.brickset.com/news/82125_IMG_1871.jpg"&gt;&lt;/p&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>LEGO IDEAS Review Results</title><link href="/2022/10/27/lego-ideas-review-results/" rel="alternate"></link><published>2022-10-27T00:00:00+01:00</published><updated>2022-10-27T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-27:/2022/10/27/lego-ideas-review-results/</id><summary type="html">&lt;p&gt;LEGO have announced the results of the latest &lt;a href="https://ideas.lego.com/"&gt;IDEAS&lt;/a&gt; review (the mechanism by which fan-designed models can get made into real LEGO sets, should they reach 10,000 votes and pass the review). Four projects were accepted this time, and I particularly like the look of the Space Age designs …&lt;/p&gt;</summary><content type="html">&lt;p&gt;LEGO have announced the results of the latest &lt;a href="https://ideas.lego.com/"&gt;IDEAS&lt;/a&gt; review (the mechanism by which fan-designed models can get made into real LEGO sets, should they reach 10,000 votes and pass the review). Four projects were accepted this time, and I particularly like the look of the Space Age designs, which will hopefully be an instant buy when it eventually comes out some time in 2023/2024. The other three ideas also look fantastic, and it will be interesting to see how LEGO adapts them to become production-ready sets. I hope they include &lt;a href="https://chrismcveigh.com/cm/welcome.html"&gt;Chris McVeigh&lt;/a&gt; on the team designing the Polaroid, as that is right up his alley!&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://ideas.lego.com/projects/08ccddc2-e926-4a7b-8287-26b40649bada"&gt;Tales of the Space Age&lt;/a&gt; by &lt;a href="https://ideas.lego.com/profile/53c6910b-7bac-4e93-8def-e81172084bb8/entries?query=&amp;amp;sort=top"&gt;John Carter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Tales of the Space Age LEGO IDEAS by John Carter" src="https://ideascdn.lego.com/media/generate/lego_ci/7c69dc4b-3a42-4458-82ac-c2c1dbf55b50/resize:950:633/webp"&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://ideas.lego.com/projects/39eb392e-0a3d-481b-b157-8f586082761e"&gt;LEGO Insects&lt;/a&gt; by &lt;a href="https://ideas.lego.com/profile/622fee18-3adf-4c66-8b4e-eb8f78d27eef/entries?query=&amp;amp;sort=top"&gt;hachiroku24&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="LEGO Insects Ideas by hachiroku24" src="https://ideascdn.lego.com/media/generate/public/lego_ci/317ac69b-ba4c-4840-ac9d-beb3bd65b61e/resize:1600:900/legacy"&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://ideas.lego.com/projects/200dd32e-8ec8-44aa-8f7d-e4dcc6f74e5c"&gt;Polaroid OneStep SX-70&lt;/a&gt; by &lt;a href="https://ideas.lego.com/profile/cb41754b-5ba3-425f-8051-5bb0be7b5c19/entries?query=&amp;amp;sort=top"&gt;Minibrick Productions&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="Polaroid OneStep SX-70 LEGO IDEAS by Minibrick Productions" src="https://ideascdn.lego.com/media/generate/public/lego_ci/fb14594a-f8bc-4511-854a-6b01c08e7daa/resize:1600:900/legacy"&gt;&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://ideas.lego.com/projects/568ee861-3b62-413a-9432-ce1d3a98c61a"&gt;The Orient Express, a Legendary Train&lt;/a&gt; by &lt;a href="https://ideas.lego.com/profile/78b8fed9-8061-4f24-845d-314b5c9aa4ec/entries?query=&amp;amp;sort=top"&gt;LEt.sGO&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img alt="The Orient Express LEGO IDEAS by LEt.sGO" src="https://ideascdn.lego.com/media/generate/public/lego_ci/0b5fbaf0-206e-4a27-8951-eca80e883ba3/resize:1600:900/legacy"&gt;&lt;/p&gt;</content><category term="LEGO"></category></entry><entry><title>Darker Sublime Text Plugin</title><link href="/2022/10/26/darker-sublime-text-plugin/" rel="alternate"></link><published>2022-10-26T00:00:00+01:00</published><updated>2022-10-26T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-26:/2022/10/26/darker-sublime-text-plugin/</id><summary type="html">&lt;p&gt;&lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt; is a popular code formatter for Python code, known for its opinionated uncompromising stance. It's incredibly helpful for teams working on common Python code to write in the same style, and Black makes that easy, without having to maintain a common set of configuration options between the team members …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://github.com/psf/black"&gt;Black&lt;/a&gt; is a popular code formatter for Python code, known for its opinionated uncompromising stance. It's incredibly helpful for teams working on common Python code to write in the same style, and Black makes that easy, without having to maintain a common set of configuration options between the team members. After all, there aren't any.&lt;/p&gt;
&lt;p&gt;However, adding it to an existing codebase is difficult. It wants to reformat every source file, which can be a pain with version history by creating commits that are purely formatting changes, or adding misleading diffs to commits that are intended for something else. To help overcome this, &lt;a href="https://github.com/akaihola/darker"&gt;Darker&lt;/a&gt; was created, which runs Black but only on the parts of code that have changed since the last commit. This is perfect for running as a post-save hook in your IDE, to consistently keep your code up to style without altering the parts of the source you haven't changed.&lt;/p&gt;
&lt;p&gt;The Darker documentation includes instructions on how to integrate the formatter with PyCharm, IntelliJ IDEA, Visual Studio Code, Vim, and Emacs—but I use Sublime Text. All it took was to write a simple Sublime Plugin, however, and we're off to the races:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;sublime_plugin&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;os&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;DarkerOnSave&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;sublime_plugin&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;EventListener&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;on_post_save_async&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;filename&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;file_name&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;view&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;match_selector&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;source.python&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
            &lt;span class="n"&gt;subprocess&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;call&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;darker&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt; &lt;span class="n"&gt;cwd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;os&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dirname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To add this yourself, go to &lt;strong&gt;Tools &amp;gt; Developer &amp;gt; New Plugin…&lt;/strong&gt; from the menubar, and replace the contents of the file with the above. Save the file as something like &lt;code&gt;darker-on-save.py&lt;/code&gt; in the same location it was created in (the default in the save dialog box), and now every time you hit Save on a Python file, it'll ensure that the code you added or altered is up to scratch with your style guide. Simple!&lt;/p&gt;</content><category term="Development"></category><category term="Python"></category></entry><entry><title>Useful Avrae Aliases</title><link href="/2022/10/10/useful-avrae-aliases/" rel="alternate"></link><published>2022-10-10T00:00:00+01:00</published><updated>2022-10-10T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-10:/2022/10/10/useful-avrae-aliases/</id><summary type="html">&lt;p&gt;&lt;a href="https://avrae.io/"&gt;Avrae&lt;/a&gt; is a Discord bot that makes running and playing D&amp;amp;D play-by-post games much easier—it provides useful tools such as integration with &lt;a href="https://www.dndbeyond.com/"&gt;D&amp;amp;D Beyond&lt;/a&gt;, powerful dice-rolling options, and combat initiative tracking.&lt;/p&gt;
&lt;p&gt;However, there are some things it doesn't do well natively. For this, it provides a powerful …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://avrae.io/"&gt;Avrae&lt;/a&gt; is a Discord bot that makes running and playing D&amp;amp;D play-by-post games much easier—it provides useful tools such as integration with &lt;a href="https://www.dndbeyond.com/"&gt;D&amp;amp;D Beyond&lt;/a&gt;, powerful dice-rolling options, and combat initiative tracking.&lt;/p&gt;
&lt;p&gt;However, there are some things it doesn't do well natively. For this, it provides a powerful scripting API via &lt;a href="https://avrae.readthedocs.io/en/latest/aliasing/aliasing.html"&gt;aliases and snippets&lt;/a&gt; for you to extend its functionality with your own commands. Many people have written their own, and these are a few of the custom commands that we have set up in our games to make life just a little bit easier.&lt;/p&gt;
&lt;p&gt;To use any of these aliases, paste the text in the code blocks below into a DM with Avrae (or any channel they are a member of).&lt;/p&gt;
&lt;h2&gt;Quick Character Switcher&lt;/h2&gt;
&lt;p&gt;When you link a character from D&amp;amp;D Beyond, Avrae will remember it and allow you to use the character in combat and for ability checks, etc. However, if you're playing in multiple games, you have to constantly remember to change the active character to the correct one before continuing. We found a handy alias on the Avrae Developer's Discord for assigning characters to channels, so instead of remembering that "in this channel, I'm Kaith, but in this channel, I'm Elmer", you can just run &lt;code&gt;!ch&lt;/code&gt; to switch to the right character for that game. I'm reproducing that here (tweaked for a recent Avrae update that deprecated a couple of the commands):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;load_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ARGS&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:],&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ARGS&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;- This Channel&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;- This Server&amp;#39;&lt;/span&gt; &lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;%x&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="n"&gt;roll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;1d16777216&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)}}{{&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;add&amp;#39;&lt;/span&gt;  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;delete&amp;#39;&lt;/span&gt;  &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;roster&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;help?&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;chan&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;len&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)}}{{&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;isdigit&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;chan&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)}}{{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)}}{{&lt;/span&gt;&lt;span class="n"&gt;emb&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; -title &amp;quot;Quick Character Changer&amp;quot; -footer &amp;quot;!ch [help|?] - Bring up the help window&amp;quot; -color &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;R&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; &amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])}}{{&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;  &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;update&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]})&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;set_uvar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;dump_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]}}{{&lt;/span&gt;&lt;span class="n"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;pop&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;set_uvar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;dump_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;embed &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;emb&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-t 10 -desc &amp;quot;Added `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;add&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;` to ID `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;`.&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-t 10 -desc &amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;No char found for ID&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Removed `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;` with ID&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt; `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;X&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;`.&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-t 20 -f &amp;quot;Roster| &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;`&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;` - `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; ` &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;w&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; &amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ow"&gt;or&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;*None*&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;quot;&amp;#39;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;-f &amp;quot;!ch|Changes to the appropriate character for the channel/server.&amp;quot; -f &amp;quot;!ch roster|View a list of all channel/server id&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;s and the character they will load&amp;quot; -f &amp;quot;!ch add &amp;lt;name&amp;gt; [chan⏐id]|Adds `name` to the selected id. Default is server id, `chan` selects the channel id, or you can input the channel/server id manually&amp;quot; -f &amp;quot;!ch delete [chan⏐id]|Deletes the given id. Default is server id, `chan` selects the channel id, or you can input the channel/server id manually&amp;quot; -f &amp;quot;Current ID&lt;/span&gt;&lt;span class="se"&gt;\&amp;#39;&lt;/span&gt;&lt;span class="s1"&gt;s|`Channel` - `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;`&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;`Server` - `&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;`&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;char &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;embed -t 5 -desc &amp;#39;Channel not found in list&amp;#39;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;emb&lt;/span&gt;&lt;span class="p"&gt;)}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With that alias set, you can run &lt;code&gt;!ch add [character] chan&lt;/code&gt; to assign the provided character to the current channel. Now, when you switch channels, you just have to run &lt;code&gt;!ch&lt;/code&gt; to activate the right one.&lt;/p&gt;
&lt;p&gt;However, remembering to run &lt;code&gt;!ch&lt;/code&gt; is easier said than done. How many times have I switched to a channel and run &lt;code&gt;!g lr&lt;/code&gt; to give my character a long rest, before realising that I hadn't switched and had just given one of my other characters a poorly-timed rest instead? To solve this, we put together an alias (worked out mostly by my friend &lt;a href="https://www.flexpotential.com/"&gt;Madi&lt;/a&gt;) designed to prefix any command you may want to run, that automatically switches before executing the actual command you asked for:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="n"&gt;multiline&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;drac2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;channel&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;id&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ctx&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;guild&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)}&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;chars&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;chars&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
&lt;span class="n"&gt;n&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="nb"&gt;id&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;][:&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
&lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;!char &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;A&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;drac2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;*&amp;amp;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;For me it's aliased to &lt;code&gt;x&lt;/code&gt;, just to make it quick and easy to type. &lt;code&gt;!x check str&lt;/code&gt; will always do a strength check for the right character for the game in &lt;em&gt;this&lt;/em&gt; channel. &lt;code&gt;!x g lr&lt;/code&gt; will always give the correct character a long rest. In combination with the &lt;code&gt;!ch&lt;/code&gt; alias, this is probably the most handy alias I have set up—I only have to remember to always use &lt;code&gt;!x&lt;/code&gt; instead of &lt;code&gt;!&lt;/code&gt;, and it always just does the right thing.&lt;/p&gt;
&lt;h2&gt;Feat Spells&lt;/h2&gt;
&lt;p&gt;The other problem we frequently run into is using spells provided by feats. There are many feats that provide the with character additional spells; one's they're able to cast a particular number of times between rest, without using up spell slots. A good example is the &lt;a href="https://www.dndbeyond.com/feats/magic-initiate"&gt;Magic Initiate&lt;/a&gt; feat:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Choose a class: bard, cleric, druid, sorcerer, warlock, or wizard. You learn two cantrips of your choice from that class's spell list.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In addition, choose one 1st-level spell from that same list. You learn that spell and can cast it at its lowest level. Once you cast it, you must finish a long rest before you can cast it again using this feat.&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;Avrae only partially understands these. Pulling from D&amp;amp;D Beyond, it creates a custom counter for each spell you've learned, with the correct number of "bubbles" for the amount of times you can use it, such as the example in the screenshot below:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Avrae custom counter output showing Magic Initiate - Command counter" src="/assets/avrae-1.png"&gt;&lt;/p&gt;
&lt;p&gt;Here, Scrat (my Hadozee character) has the &lt;strong&gt;Magic Initiate (Cleric): Command&lt;/strong&gt; counter, that corresponds to his background feat providing that 1-st level spell. Avrae's also added the spell to Scrat's spellbook (&lt;code&gt;!sb&lt;/code&gt;), meaning Scrat is able to cast it. However, they're not linked together in any way. Casting the spell uses a spell slot (it shouldn't) and doesn't update the counter (it should). This means that instead, there are a number of things I need to remember to do when casting the spell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Firstly, check the custom counter to see if it's been used or not (i.e. is the spell available to me, or do I need a long rest first).&lt;/li&gt;
&lt;li&gt;Cast the spell without using a spell slot (the &lt;code&gt;-i&lt;/code&gt; flag to &lt;code&gt;!cast&lt;/code&gt; or &lt;code&gt;!i cast&lt;/code&gt; will do this).&lt;/li&gt;
&lt;li&gt;Decrement the counter.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To solve this, I wrote a short alias I call &lt;code&gt;!featcast&lt;/code&gt;, which can be used in place of &lt;code&gt;!cast&lt;/code&gt; (or &lt;code&gt;!i cast&lt;/code&gt;) to handle the above three things:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;!&lt;/span&gt;&lt;span class="n"&gt;alias&lt;/span&gt; &lt;span class="n"&gt;featcast&lt;/span&gt; &lt;span class="p"&gt;{{&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="o"&gt;=&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ARGS&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;help&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;}}{{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="n"&gt;H&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;:])}}&lt;/span&gt;&lt;span class="n"&gt;multiline&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;drac2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;H&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;character&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ccs&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;consumables&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;endswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;startswith&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;lower&lt;/span&gt;&lt;span class="p"&gt;()))]&lt;/span&gt;
    &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ccs&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;ccs&lt;/span&gt; &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;strip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;
            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="n"&gt;combat&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
                &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;i &amp;quot;&lt;/span&gt;
            &lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;set&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;cast &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39; -i &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!embed -title &amp;#39;Cannot cast &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;!&amp;#39; -desc &amp;#39;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; does not have any uses of &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; from the &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; feat available.&lt;/span&gt;&lt;span class="se"&gt;\n\n&lt;/span&gt;&lt;span class="s2"&gt;**&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;**&lt;/span&gt;&lt;span class="se"&gt;\n&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;cc&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;#39;&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!embed -title &amp;#39;Could not find a &lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="se"&gt;\&amp;quot;&lt;/span&gt;&lt;span class="s2"&gt; custom counter&amp;#39; -desc &amp;#39;Check that your feats for **&lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="n"&gt;ch&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;** are set up correctly.&amp;#39; -thumb &amp;lt;image&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;!embed -title &amp;#39;Help for feat-casting&amp;#39; -desc &amp;#39;Use `!featcast &amp;lt;spell&amp;gt;` to cast a spell provided by a feat, instead of using your spell slots.&amp;#39;&amp;quot;&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="n"&gt;drac2&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It relies on the fact that Avrae names the custom counters sensibly, in the format of "Feat Name: Spell Name". When typing &lt;code&gt;!featcast command -t Target1 -t Target2&lt;/code&gt;, it will look for a custom counter named in that way that could possibly match the provided spell name. When it finds one, it checks for a free slot, and casts the spell (with the provided arguments), decrementing the counter.&lt;/p&gt;
&lt;p&gt;There are many feats and backgrounds that provide spells, and this alias has made handling them &lt;em&gt;much&lt;/em&gt; easier. Hopefully it can be of some use in your games too!&lt;/p&gt;</content><category term="D&amp;D"></category><category term="Avrae"></category></entry><entry><title>Review: 71406 Yoshi's Gift House</title><link href="/2022/10/07/review-71406-yoshis-gift-house/" rel="alternate"></link><published>2022-10-07T00:00:00+01:00</published><updated>2022-10-07T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-07:/2022/10/07/review-71406-yoshis-gift-house/</id><summary type="html">&lt;p&gt;I was given a few more of the LEGO &lt;a href="https://brickset.com/news/category-Set-review/theme-Super-Mario"&gt;Super Mario&lt;/a&gt; sets to review for Brickset, including &lt;a href="https://brickset.com/article/82124/review-71406-yoshi-s-gift-house"&gt;71407&lt;/a&gt; Yoshi's Gift House:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since I was a child, Yoshi has always been my favourite Super Mario character. I couldn't put my finger on why, but there's something very whimsical and fun about …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I was given a few more of the LEGO &lt;a href="https://brickset.com/news/category-Set-review/theme-Super-Mario"&gt;Super Mario&lt;/a&gt; sets to review for Brickset, including &lt;a href="https://brickset.com/article/82124/review-71406-yoshi-s-gift-house"&gt;71407&lt;/a&gt; Yoshi's Gift House:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since I was a child, Yoshi has always been my favourite Super Mario character. I couldn't put my finger on why, but there's something very whimsical and fun about the dinosaur-like cartoon creature that's willing to carry Mario around on his back and help out wherever he can.&lt;/p&gt;
&lt;p&gt;He's an iconic part of Mario lore, and has fittingly appeared in a number of sets so far in the Super Mario line. &lt;a href="https://brickset.com/sets/71406-1"&gt;71406&lt;/a&gt; Yoshi's Gift House is the latest to feature the character, and is the largest with him as the sole protagonist.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="Yoshi's Gift House LEGO set" src="https://images.brickset.com/news/82124_IMG_1847.jpg"&gt;&lt;/p&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>The Lost Jungles of Rabbad: Part 2</title><link href="/2022/10/06/the-lost-jungles-of-rabbad-part-2/" rel="alternate"></link><published>2022-10-06T00:00:00+01:00</published><updated>2022-10-06T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-06:/2022/10/06/the-lost-jungles-of-rabbad-part-2/</id><summary type="html">&lt;p&gt;This is part two in my ongoing series to summarise the &lt;em&gt;Lost Jungles of Rabbad&lt;/em&gt; D&amp;amp;D adventure I am taking part in. I previously wrote up &lt;a href="/2022/07/07/the-lost-jungles-of-rabbad/"&gt;the first part&lt;/a&gt;, so I highly recommend reading that before continuing here, if you haven't already!&lt;/p&gt;
&lt;p&gt;&lt;img alt="overgrown jungle" src="/assets/jungle.png"&gt;&lt;/p&gt;
&lt;p&gt;When we last left our fearless heroes …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is part two in my ongoing series to summarise the &lt;em&gt;Lost Jungles of Rabbad&lt;/em&gt; D&amp;amp;D adventure I am taking part in. I previously wrote up &lt;a href="/2022/07/07/the-lost-jungles-of-rabbad/"&gt;the first part&lt;/a&gt;, so I highly recommend reading that before continuing here, if you haven't already!&lt;/p&gt;
&lt;p&gt;&lt;img alt="overgrown jungle" src="/assets/jungle.png"&gt;&lt;/p&gt;
&lt;p&gt;When we last left our fearless heroes, they had just defeated Dawn Song; on some level, at least—she had turned into a necrodragon, and flown off. Well, Deimos and Qhell weren't content to leave it at that, and chased after her but were unable to catch up. After licking their wounds, the group turned to examine the items she'd left behind. They found:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;strong&gt;Helm of Earth&lt;/strong&gt;, made of a simple dark brown wood;&lt;/li&gt;
&lt;li&gt;the &lt;strong&gt;Staff of Sight&lt;/strong&gt;, golden, smooth and well-made;&lt;/li&gt;
&lt;li&gt;five diamonds; and&lt;/li&gt;
&lt;li&gt;an amulet made of a small animal skull dyed blood red.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The Helm and Staff, together with Sumunar's Hammer, seem to make up the three of the four items that bind Fulgrin in his tomb. Kosta takes the helm, Elmer takes the staff.&lt;/p&gt;
&lt;h3&gt;Kosta's Absence Explained&lt;/h3&gt;
&lt;p&gt;Kosta disappeared down the mine, and was taken by Pelor to another plane. There, they meet with The Celestial, the patron with which Kosta did a deal previously. The gods appear to be fighting over him and his allegiance, with Pelor attempting to release Kosta from the binding deal he had unwittingly made with Mr C. They come to an arrangement: Mr C shall only demand four more tasks of Kosta, and Pelor will give him "the amulet".&lt;/p&gt;
&lt;p&gt;Kosta is taken to his old city of Fallen Oak, where he is watching the town under attack, two armies clashing. He watches Father Thason, his adopted father, struck down and killed. Kosta is told he has a choice to make: save Father Thason, or save the city from plunder, pillage, and murder. It is not clear whether the attack is happening in real time, the past, or the future, or even real. Kosta chooses the city, to the Celestial's anger.&lt;/p&gt;
&lt;p&gt;Back at the plane with Pelor, as one of his tasks Kosta is made to pick up a rapier by the Celestial that shocks him with a blast of energy and ages him a few decades. For the final task, the Celestial takes Kosta's right eye, replacing it with a pulsing purple orb, and disappears.&lt;/p&gt;
&lt;p&gt;Pelor then opens the heavens, looking down on the battle between the group and Dawn Song below. With a cry, Kosta jumps, and the portal closes behind him.&lt;/p&gt;
&lt;h3&gt;Qhell's Backstory&lt;/h3&gt;
&lt;p&gt;Qhell explains that he has met Dawn Song before:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Several years ago I was taken as a slave, captured by some gang of outlaws. I was a curiosity, sold repeatedly, until I ended up on a ship. I didn’t know where I was or what they intended to do with me, except for that cat. She would come down to the hold every single day to leer at her cargo, torturing one lucky creature each day. She is evil, that’s all I know of her, and I vowed never to be in that position again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Kosta's Eye, Father Thason, and Contacting the Gods&lt;/h3&gt;
&lt;p&gt;Kosta asks Elmer to study the glowing purple orb that has replaced his eye. Elmer can tell that it's deeply enchanted with powerful magic, beyond that of mortals.&lt;/p&gt;
&lt;p&gt;Kosta then heads off to find the clerics, who help him with the &lt;em&gt;scry&lt;/em&gt; spell to try and locate Father Thason, but they are unable to. Without a clear direction, he tries to contact Pelor, to no avail, as Deimos also tries in vain to get in touch with Gargauth.&lt;/p&gt;
&lt;h3&gt;Sankra's Ice&lt;/h3&gt;
&lt;p&gt;At Elmer's suggestion, Nib takes another look through the Celestial book given to them by the General. He finds a passage that mentions:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Moradin's Might, The Wild Mother's Clay, Savras's Eye, at the heart, Sankra's Ice&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The names line up with the four items, leaving Sankra's Ice to be the Crystal Blade. The group decide to head to Dawn Song's camp the following day to see what she had left behind.&lt;/p&gt;
&lt;p&gt;That night, Nib, Deimos, and Sumunar dream of the black plain again. Around the fire this time is Katrina, the devil, and a pale blue figure. Katrina tells them that the crystal blade is part of the lock, and the group should take the remaining three items back to the door to seal it again, at which point the three magical items they've found will be returned to their hiding places.&lt;/p&gt;
&lt;h3&gt;We Canoe!&lt;/h3&gt;
&lt;p&gt;Leaving Rafael at the fort, the party take a pair of canoes to cross the river's mouth and avoid going back through the gulch. After the crocodile fiasco, Kosta is put safely inside a magical ball for the journey. They're attacked on the way by giant sharks, and fight them off with difficulty, but eventually make it to the other shore. Due to the loss of a canoe, Elmer has to ride Qhell (as a Giant Sea Horse) for the rest of the journey.&lt;/p&gt;
&lt;h3&gt;Campfire Tales&lt;/h3&gt;
&lt;p&gt;They camp on the treeline of the beach. Nib tells stories of their excursions north:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Last time we camped by the sea, was much colder than this. Was up north, near Tressmouth. We’d been hired to go track down the rumours of a lost tribe of elves deep in the arctic tundra. We’d sailed on a old ship, The Orphans Rage, north out of Nook, but hit difficulties about two days out of Northwatch. Ship went down, half the crew lost to the dark waves. Those of us that made it, washed up on this thin spit of land. We burnt what wreckage we could, the flames green with the salt, just to stave off the cold.&lt;/p&gt;
&lt;p&gt;As dawn broke, we had to head out. Only 12 of us left then. The cold claimed two more that first day, another the next.&lt;/p&gt;
&lt;p&gt;We hit a valley, some shelter from the winds, but soon lost in their midst. We turned one bend and there stood our doom, a dark beast of the ice. It feel on us, blood-stained claws tearing into us. We ran but it was faster. The end was upon us as a thick black arrow sailed into the crevasse. Then another, and another, another. Under the hail, the beast fell, and looking up we saw them, The Lost Elves, bows drawn. Their leader nodded at me, and like that, were gone. Just saved our lives and disappeared into the snow.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4&gt;Sumunar's Story&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;"You all know that Jadel and I knew each other," &lt;em&gt;Sumunar takes up.&lt;/em&gt; "We were in nearby villages, and played together sometimes as young orcs. Well, she had a sweet tusk like you would not believe. Always loved a bit of honey or sap-sugar. So one day we were out rambling, and came across a hive high up in a tree. She wanted to raid it, and I was not hard to convince. Well anyways, we got our little selves about halfway up, then realized we couldn't reach any higher. We tried going back down, but it was at an awkward angle and we couldn't manage. We must have sat there for three hours, arguing about whose fault it was and yelling for help occasionally. At last I grew so sick of waiting that I jumped down, and naturally broke my wrist. So then she was still stuck, and I was on the ground but holding my wrist and crying. Finally I got it together enough to run to the nearest village, and the grown-ups got Jadel down." &lt;em&gt;She pauses and laughs fondly.&lt;/em&gt; "I forgave her quickly enough, but her nickname was Honey-Tusk for years afterwards."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;A Visit From Elmer's Father&lt;/h3&gt;
&lt;p&gt;As Elmer takes watch that night, the figure of his father walks out of the water and berates him for running away, tells him to come home. An argument ensues, and Elmer refuses to go anywhere with him.&lt;/p&gt;
&lt;h3&gt;Sa'khuna's Statue&lt;/h3&gt;
&lt;p&gt;The next day, on their trek through the forest, the group come across a statue of a long-dead god of the hells, Sa'khuna. Coloured keys sit in locks, and as Kosta plays with them, a loud boom explodes from the statue. The roc approaches from the sky, and the party escape with the help of Jul's Pass Without Trace spell.&lt;/p&gt;
&lt;h3&gt;Areka&lt;/h3&gt;
&lt;p&gt;On the outskirts of Dawn Song's camp, the party rest for the night. Deimos is visited during his watch by a wooden automaton with a black spear. It talks with Deimos, though doesn't appear threatening. Apparently the roc is called Barda, and it warns of Ghosts to the south, and to stay out of the tunnels.&lt;/p&gt;
&lt;h3&gt;The Return of Night Bane&lt;/h3&gt;
&lt;p&gt;During Elmer's watch, Night Bane turns up, limping, draging a broken leg behind them. He has a conversation with Elmer, saying that Kosta killed him from behind, and that he'd come for him. Deimos and Kosta wake, and Night Bane challenges Kosta to a fight. Instead, Kosta talks him down, and then heals him slightly at his request. He leaves to find his partner, claiming that "Vecna is all, and will be all soon".&lt;/p&gt;
&lt;h3&gt;Dawn Song's Camp&lt;/h3&gt;
&lt;p&gt;In the morning, the group confront four figures still at the camp, "Brazen Guard of the Golden Stars, servants to the Undying Mistress". Elmer fireballs them, which sets the camp alight and starts a fight. Defeating the guards and putting the fire out, they find the same books they have a copy of, as well as an updated map of the jungle with more locations marked. There's also an annotated book, &lt;em&gt;The Travels of Magil the Lost, Vol 5: Mauldold, Illwind, and the Jungle&lt;/em&gt;. Her notes also show that they had found the helm at a shrine at the bottom of the river. &lt;/p&gt;
&lt;p&gt;Kosta attempts to talk to Pelor for direction, but is blocked by a voice saying "he can't hear you, you're on my land now. She knows where you are now. I've told her." Kosta is overwhelmed by twisting energy pulsing from his eye.&lt;/p&gt;
&lt;h3&gt;Dawn Song the Necrodragon. Again.&lt;/h3&gt;
&lt;p&gt;In the far distance, Qhell sees Dawn Song lift off from the mountains headed towards the group. Deimos puts Kosta in the ball once more, and lifts off to distract her while the others run for the trees. A brief fight in the air comes to an end when Nib casts Dimension Door to pull Deimos out of the dragon's way and disappear into the forest.&lt;/p&gt;
&lt;p&gt;Safe in the trees, they release Kosta from the ball, returned to normal.&lt;/p&gt;
&lt;h3&gt;Don't Smell the Flowers&lt;/h3&gt;
&lt;p&gt;Heading onward through the forest towards a place marked on Dawn Song's map as Fulgrin's Tomb, Kosta stops to sniff some flowers, which turn out to be nasty man-eating plants. Fighting them off, the party have to get creative with methods of removing the corrosive sap from their skin without any water to hand.&lt;/p&gt;
&lt;h3&gt;The Crashed Balloon&lt;/h3&gt;
&lt;p&gt;Further on, they come across a crashed hot air balloon with the skeletons of some elves. Their notes show them to be explorers who had set out long ago to find the lost city of Maudold, and crashed here. Elmer takes a ring, intending to return it to their family one day. There's also a chest there, with an inscription that indicates it can only be opened at midnight. The party bury the elves, and then camp for the night.&lt;/p&gt;
&lt;p&gt;During the night, Qhell is visited by another chwinga like the one that came to Sumunar, which has apparently placed leaves on the graves of the elves. He gives Qhell a ball of twine.&lt;/p&gt;
&lt;p&gt;At midnight, they open the chest and find a load of gems, four spell scrolls, a wand, a red amulet, an old map, and a pair of glowing stones. The amulet is to stop somebody from being magically tracked, and the wand helps find hidden doors and compartments. The stones are teleportation anchors. Holding one stone lets you teleport to either of the other two (of which the group only found one).&lt;/p&gt;
&lt;h3&gt;The Endless&lt;/h3&gt;
&lt;p&gt;Deimos takes a stone, and teleports to the unknown one. He finds himself in a large dusty room, where he is promptly arrested and taken across a large city (Rabbad, later explained by Nib) to talk to The Endless, a tall thin figure with golden skin. He seems to know all about the group, what they have been trying to do, and even talks of the Tabaxi twins sibling, Dusk, who they presume lost. Deimos is given the third stone, and he returns to the others.&lt;/p&gt;
&lt;h3&gt;Furry Creature Fight&lt;/h3&gt;
&lt;p&gt;While Deimos is gone, the others move on through the jungle, where they're set upon by small furry creatures. Just as they manage to fight them off, Qhell scaring a few away as a Black Bear, Deimos pops back into existence with them.&lt;/p&gt;
&lt;h3&gt;Fulgrin's Tomb Entrance&lt;/h3&gt;
&lt;p&gt;More treking through the jungle, and the group eventual stumble on what looks to be the entrance to Fulgrin's Tomb. A pile of stone juts up out of the ground, with a jet black door set in it. The clearing is patrolled by several figures in black armour. Talking with the figures, they are told to leave. They will not let anybody "disturb the imprisonment" and won't say any more. Qhell discerns that they are engraved with binding sigils—something is bound magically within each suit of armour. The group retreat for the night.&lt;/p&gt;
&lt;h3&gt;Areka, Again&lt;/h3&gt;
&lt;p&gt;Before sleep, Elmer studies the books again and finds mention of "a cave of glass behind a door of nothing" in the &lt;strong&gt;Da Dark Under&lt;/strong&gt;, as well as "the land of their sleep, a black river of death, a battle with The Night".&lt;/p&gt;
&lt;p&gt;That night, Deimos is once again visited by Areka, who tells him and Elmer that the third cat, Dusk, is beneath the jungle, behind that door, attempting to break open the lock without the rest of the key, which he refers to as the Ashes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;As night continues, so does our story. The plan for the morning? To get past the guards, through the black door, and down below to Fulgrin's Tomb. Are the party nearing the conclusion of their adventure? Are they walking to certain death, and will they all return? Find out… when we do, and I do another write up!&lt;/p&gt;</content><category term="D&amp;D"></category><category term="The Lost Jungles of Rabbad"></category></entry><entry><title>Relay FM for St. Jude</title><link href="/2022/10/02/relay-fm-for-st-jude/" rel="alternate"></link><published>2022-10-02T00:00:00+01:00</published><updated>2022-10-02T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-10-02:/2022/10/02/relay-fm-for-st-jude/</id><summary type="html">&lt;p&gt;September is over, and that means the end of another &lt;a href="https://www.cclg.org.uk/ccam"&gt;Childhood Cancer Awareness Month&lt;/a&gt;. For the last four years, the &lt;a href="https://www.relay.fm/"&gt;Relay FM&lt;/a&gt; community has used the opportunity to raise money for &lt;a href="https://www.stjude.org/about-st-jude.html?sc_icid=us-mm-missionstatement#mission"&gt;St. Jude Children's Research Hospital&lt;/a&gt;, an institution dedicated to understanding, treating, and discovering new ways to defeat childhood cancer …&lt;/p&gt;</summary><content type="html">&lt;p&gt;September is over, and that means the end of another &lt;a href="https://www.cclg.org.uk/ccam"&gt;Childhood Cancer Awareness Month&lt;/a&gt;. For the last four years, the &lt;a href="https://www.relay.fm/"&gt;Relay FM&lt;/a&gt; community has used the opportunity to raise money for &lt;a href="https://www.stjude.org/about-st-jude.html?sc_icid=us-mm-missionstatement#mission"&gt;St. Jude Children's Research Hospital&lt;/a&gt;, an institution dedicated to understanding, treating, and discovering new ways to defeat childhood cancer. Last year, they raised over $700,000. This year, they're set to match that amount again, taking the total raised in the last four years to over $2 million.&lt;/p&gt;
&lt;p&gt;For Stephen, one of the founders of Relay FM, the cause is particularly important. You can read more about his story and why they fundraise over on &lt;a href="https://512pixels.net/2022/08/relay-st-jude-2022/"&gt;512pixels.net&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When the campaign started last year, I had been a part of the &lt;a href="https://relay.fm/membership"&gt;Relay FM members Discord&lt;/a&gt; for a few months. People were sharing the fundraising total in the Discord in various ways, and a few enterprising individuals came up with a variety of ways to get that total into a iOS Home Screen widget, such as &lt;a href="https://zmknox.com/2021/08/21/building-a-donation-tracker-widget.html"&gt;this Scriptable solution by Zach Knox&lt;/a&gt;. At the time, I was just starting to play with iOS app development and I thought "we can do better than this. Let's make a native app and widget!"&lt;/p&gt;
&lt;p&gt;A group of us had already gotten together and built a Discord bot for the server, so I had the perfect &lt;a href="https://tildy.dev"&gt;group of developers&lt;/a&gt; to solicit for help. Together, we built a small app that pulled the campaign information from the Tiltify public API (reverse engineered from &lt;a href="https://tiltify.com/@relay-fm/relay-fm-for-st-jude-2022"&gt;their website&lt;/a&gt;, rather than the official APIs), displayed it in the app, and provided a widget. It could also pull in the campaign's milestones. We distributed it via TestFlight, so we didn't have to deal with full-on App Review, and it was a great success (amongst Relay FM members, at least).&lt;/p&gt;
&lt;p&gt;It was a brilliant learning experience for me, and greatly increased my knowledge of how a iOS app is built, albeit a very simple one. I am very grateful to all the people who took the time to explain things to me, and review and comment on my code to help me become a better Swift developer.&lt;/p&gt;
&lt;p&gt;This year, we dusted off the app and plugged in the new campaign details a few days before September started, in order to get it up and running again. However, the campaign organisers threw us a last-minute curveball—there wasn't going to be just one campaign this year, but many! Relay would still have their main one, but anybody could set up "subfundraisers", all of which would add towards the overall total. So how was the app going to handle that?&lt;/p&gt;
&lt;p&gt;We spent some time reverse engineering the Tiltify API for the new campaign format, and reworked the app from a simple "here's a widget" to a more full-featured discovery app, showcasing not only the overall total but also each individual fundraiser and their own goals and rewards. We extended the widgets to allow you to choose which fundraiser it should show, provided a variety of appearance options, and added a share screen to let users post pictures of the fundraiser progress on social media.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Relay FM for St. Jude iOS App Screenshots" src="/assets/IMG_0929.PNG"&gt;&lt;/p&gt;
&lt;p&gt;And of course, we threw in Lock Screen widgets and donation charts for those who'd braved the iOS 16 beta, or regular people upgrading when it was released publicly half way through the month.&lt;/p&gt;
&lt;p&gt;Throughout the project I've learned more about Swift, SwiftUI, and iOS app development than I ever would have working on my own with no real goal in mind. I've learned how to handle the various iPhone and iPad screen sizes, store data locally with GRDB, and use custom intents to provide widgets of all sizes with dynamic options.&lt;/p&gt;
&lt;p&gt;It's been a lot of fun to have a project to work on that's reached so many people (despite never leaving TestFlight!) and helped towards raising the absolutely phenomenal amount that the Relay FM community achieved for St. Jude this year. The app is &lt;a href="https://github.com/Lovely-Development-Team/St-Jude-Widget-App"&gt;open source&lt;/a&gt;, and we will hopefully be resurrecting it next September when the community comes together once more in the fight against childhood cancer.&lt;/p&gt;</content><category term="Development"></category><category term="Swift"></category><category term="Apps"></category></entry><entry><title>UserDefaults, @AppStorage, and Data Types</title><link href="/2022/09/29/userdefaults-appstorage-and-data-types/" rel="alternate"></link><published>2022-09-29T00:00:00+01:00</published><updated>2022-09-29T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-09-29:/2022/09/29/userdefaults-appstorage-and-data-types/</id><summary type="html">&lt;p&gt;As I'm starting to play more seriously with iOS app development, Xcode, and Swift, I'm starting to come up with a variety of patterns I use in the various toy apps I mess around with that make working with certain APIs or frameworks easier. One of these is &lt;code&gt;UserDefaults&lt;/code&gt;, which …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As I'm starting to play more seriously with iOS app development, Xcode, and Swift, I'm starting to come up with a variety of patterns I use in the various toy apps I mess around with that make working with certain APIs or frameworks easier. One of these is &lt;code&gt;UserDefaults&lt;/code&gt;, which provides an easy way to store persistent data between app launches.&lt;/p&gt;
&lt;p&gt;The basic way to interact with &lt;code&gt;UserDefaults&lt;/code&gt; is to set values by assigning a data type to a particular key (which are strings), and reading that key later:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Storing a boolean value&lt;/span&gt;
&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;hasPerformedInitialSync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;// Retrieving a boolean value&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;hasPerformedInitialSync&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;There are two problems with this, though:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Using string-based keys is error-prone; it can't be checked by the compiler, so an overlooked typo can lead to unexpected behaviour that's difficult to debug.&lt;/li&gt;
&lt;li&gt;SwiftUI is based around watching state variables for changes, and redrawing views based upon this; how can we tie &lt;code&gt;UserDefaults&lt;/code&gt; into that?&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;A &lt;code&gt;UserDefaults&lt;/code&gt; extension&lt;/h2&gt;
&lt;p&gt;The first problem is one I've started solving by creating an extension to the &lt;code&gt;UserDefaults&lt;/code&gt; class. I put this in a new Swift file (usually &lt;code&gt;Extensions/UserDefaults.swift&lt;/code&gt;), with code such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;UserDefaults&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="nc"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Bool&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kr"&gt;get&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;bool&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kr"&gt;set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This has promoted the previous string-based keys we were using to an &lt;code&gt;enum&lt;/code&gt;: the compiler is now able to check our keys for us and produce errors at compile time if we use one we haven't defined. An additional computed property on the &lt;code&gt;UserDefaults&lt;/code&gt; class hides the get and set logic from us, so in the rest of our code we need only do the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;// Storing a boolean value&lt;/span&gt;
&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;

&lt;span class="c1"&gt;// Retrieving a boolean value&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Hurray! No more string-based keys to remember. But what about the second problem?&lt;/p&gt;
&lt;p&gt;Up until recently, I was syncing &lt;code&gt;UserDefaults&lt;/code&gt; changes with SwiftUI view state by storing a related &lt;code&gt;@State&lt;/code&gt; variable, and tying it to the corresponding &lt;code&gt;UserDefaults&lt;/code&gt; key using &lt;code&gt;onAppear&lt;/code&gt; and &lt;code&gt;onChange(of:)&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;ContentView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;State&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Bool&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;NavigationView&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="c1"&gt;// View code&lt;/span&gt;
      &lt;span class="n"&gt;Button&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;action&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;
      &lt;span class="p"&gt;})&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Sync Done!&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
      &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onAppear&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;onChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;of&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;newValue&lt;/span&gt; &lt;span class="k"&gt;in&lt;/span&gt;
      &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;standard&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;newValue&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This works by fetching the value stored in &lt;code&gt;UserDefaults&lt;/code&gt; when the view first appears and assigning it to the state variable, and then watching the state variable for changes, and syncing those back to the &lt;code&gt;UserDefaults&lt;/code&gt; key. But there are still problems with this:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It's easy to forget to add the required line to &lt;code&gt;onAppear&lt;/code&gt; or the &lt;code&gt;onChange&lt;/code&gt; handler for a new variable.&lt;/li&gt;
&lt;li&gt;The view won't react to changes that happen to the &lt;code&gt;UserDefaults&lt;/code&gt; key outside of its own interaction, such as if a presented sheet changes the value.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Fortunately, SwiftUI introduced a new property wrapper similar to &lt;code&gt;@State&lt;/code&gt; to help us with this.&lt;/p&gt;
&lt;h2&gt;Introducing &lt;code&gt;@AppStorage&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Called &lt;code&gt;@AppStorage&lt;/code&gt;, the new property wrapper lets you reference a &lt;code&gt;UserDefaults&lt;/code&gt; key directly and bind it to a variable that will automatically sync changes between itself and &lt;code&gt;UserDefaults&lt;/code&gt;. It can be used as such:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;ContentView&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AppStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;hasPerformedInitialSync&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Bool&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;View&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;// View code&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that there's no longer any need for the value to be read &lt;code&gt;onAppear&lt;/code&gt;, or the changes to be observed using &lt;code&gt;onChange&lt;/code&gt;. SwiftUI will take care of that for us, automatically syncing data back when actions within the view change the state variable's value. Very handy!&lt;/p&gt;
&lt;h2&gt;Supported Data Types&lt;/h2&gt;
&lt;p&gt;However, there are still limitations with this approach, one of which I ran into today and was banging my head against for quite some time until I realised the issue.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;UserDefaults&lt;/code&gt; supports the storage of &lt;a href="https://developer.apple.com/documentation/foundation/userdefaults"&gt;a variety of primitive data types&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;Double&lt;/li&gt;
&lt;li&gt;Float&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It also supports storing arrays or dictionaries containing these primitive types, using the &lt;code&gt;array(forKey:)&lt;/code&gt;, &lt;code&gt;stringArray(forKey:)&lt;/code&gt;, and &lt;code&gt;dictionary(forKey:)&lt;/code&gt; methods. &lt;code&gt;AppStorage&lt;/code&gt;, however, does not support this. Apple's &lt;a href="https://developer.apple.com/documentation/swiftui/appstorage"&gt;documentation for &lt;code&gt;AppStorage&lt;/code&gt;&lt;/a&gt; lists the &lt;code&gt;init&lt;/code&gt; methods available, and they can return:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;String&lt;/li&gt;
&lt;li&gt;Integer&lt;/li&gt;
&lt;li&gt;Data&lt;/li&gt;
&lt;li&gt;URL&lt;/li&gt;
&lt;li&gt;Double&lt;/li&gt;
&lt;li&gt;Boolean&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It's missing &lt;code&gt;Float&lt;/code&gt;—I didn't care about that—and the &lt;code&gt;Array&lt;/code&gt; and &lt;code&gt;Dictionary&lt;/code&gt; methods—I &lt;em&gt;did&lt;/em&gt; care about those. I had created my &lt;code&gt;UserDefaults&lt;/code&gt; extension, as normal:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;UserDefaults&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="nc"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;favouriteColours&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;favouriteColours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kr"&gt;get&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;stringArray&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;favouriteColours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="kr"&gt;set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;favouriteColours&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;That worked fine, as expected. But when I tried to use it with &lt;code&gt;@AppStorage&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AppStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;favouriteColours&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;favouriteColours&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nb"&gt;String&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;the compiler threw up the error &lt;code&gt;No exact matches in call to initializer&lt;/code&gt;. Helpful. It turns out that's because of the lack of support for the collection methods, and I had to resort to using my original &lt;code&gt;onAppear&lt;/code&gt;/&lt;code&gt;onChange&lt;/code&gt; workaround.&lt;/p&gt;
&lt;h2&gt;It's not all bad, though!&lt;/h2&gt;
&lt;p&gt;Despite this frustrating limitation with &lt;code&gt;AppStorage&lt;/code&gt; (which I hope is fixed in a future SwiftUI release), I really like the &lt;code&gt;UserDefaults&lt;/code&gt; extension method for working with the API. There's two more things I want to mention about it. One, it can be used to store or return any data type, as long as you can easily convert it to or from one of the supported types. For example, storing a custom &lt;code&gt;enum&lt;/code&gt; is easy. Make the &lt;code&gt;enum&lt;/code&gt; inherit from &lt;code&gt;Int&lt;/code&gt; or &lt;code&gt;String&lt;/code&gt;, and you're off to the races:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="nc"&gt;Mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;Int&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;light&lt;/span&gt;
  &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;dark&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;UserDefaults&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;enum&lt;/span&gt; &lt;span class="nc"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="nb"&gt;String&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;case&lt;/span&gt; &lt;span class="n"&gt;preferredMode&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;preferredMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Mode&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kr"&gt;get&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;Mode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;integer&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preferredMode&lt;/span&gt;&lt;span class="p"&gt;.,&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="p"&gt;??&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;light&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="kr"&gt;set&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt; &lt;span class="n"&gt;setValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;newValue&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;forKey&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preferredMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Secondly, if you want to be able to access the data you're storing in other targets, such as a widget, the extension is a great place to create a static property that uses a group identifier:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;extension&lt;/span&gt; &lt;span class="nc"&gt;UserDefaults&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;static&lt;/span&gt; &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nv"&gt;shared&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;suiteName&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;group.com.myapp.AppName&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Accessing &lt;code&gt;UserDefaults.shared&lt;/code&gt; instead of &lt;code&gt;UserDefaults.standard&lt;/code&gt; will allow it to be read and written from any targets that have access to the specified group identifier. Additionally, SwiftUI provides two different ways of specifying that you want to use &lt;code&gt;.shared&lt;/code&gt; instead of &lt;code&gt;.standard&lt;/code&gt;. It can be done on a per-variable basis by passing the &lt;code&gt;store:&lt;/code&gt; parameter to &lt;code&gt;@AppStorage&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;@&lt;/span&gt;&lt;span class="n"&gt;AppStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Key&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;preferredMode&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;rawValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;store&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="kd"&gt;private&lt;/span&gt; &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;preferredMode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;Mode&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt; &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;light&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Or it can be made the default for all child views within a hierarchy:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;struct&lt;/span&gt; &lt;span class="nc"&gt;MyApp&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;App&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;var&lt;/span&gt; &lt;span class="nv"&gt;body&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;some&lt;/span&gt; &lt;span class="n"&gt;Scene&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="n"&gt;WindowGroup&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="n"&gt;ContentView&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;defaultAppStorage&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;UserDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;shared&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Both of which make working with &lt;code&gt;UserDefaults&lt;/code&gt; cross-application much easier.&lt;/p&gt;
&lt;p&gt;Anyway, I'm mostly writing this down so that the next time I'm struggling with it I can prompt myself on how it works and why I've done things a certain way; but maybe it can help you, too!&lt;/p&gt;</content><category term="Development"></category><category term="Swift"></category><category term="Apps"></category></entry><entry><title>Review: 71408 Princess Peach's Castle</title><link href="/2022/09/11/review-71408-princess-peachs-castle/" rel="alternate"></link><published>2022-09-11T00:00:00+01:00</published><updated>2022-09-11T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-09-11:/2022/09/11/review-71408-princess-peachs-castle/</id><summary type="html">&lt;p&gt;My final review of this year's new Princess Peach-themed Super Mario LEGO sets, this time for &lt;a href="https://brickset.com/sets/71408-1/Princess-Peach-s-Castle"&gt;Peach's Castle&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://brickset.com/sets/71408-1/Princess-Peach-s-Castle"&gt;71408&lt;/a&gt; Princess Peach's Castle is the largest of the Peach-themed additions to the Super Mario line this year, and is in fact the largest of all the game's sets so far at …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;My final review of this year's new Princess Peach-themed Super Mario LEGO sets, this time for &lt;a href="https://brickset.com/sets/71408-1/Princess-Peach-s-Castle"&gt;Peach's Castle&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://brickset.com/sets/71408-1/Princess-Peach-s-Castle"&gt;71408&lt;/a&gt; Princess Peach's Castle is the largest of the Peach-themed additions to the Super Mario line this year, and is in fact the largest of all the game's sets so far at 1,216 parts. It includes a variety of characters, both new to the range and returning, and commands some impressive space when laid out ready to play. Let's take a look at what's inside!&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>Review: 71407 Cat Peach Suit and Frozen Tower</title><link href="/2022/08/05/review-71407-cat-peach-suit-and-frozen-tower/" rel="alternate"></link><published>2022-08-05T00:00:00+01:00</published><updated>2022-08-05T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-08-05:/2022/08/05/review-71407-cat-peach-suit-and-frozen-tower/</id><summary type="html">&lt;p&gt;I took look at &lt;a href="https://brickset.com/article/79600/review-71407-cat-peach-suit-and-frozen-tower"&gt;another one&lt;/a&gt; of the Princess Peach-themed Super Mario LEGO sets that were released at the start of August:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There's no doubt that this set is visually striking - it has an impressive height, bright colours, and a baddie flying around on a broomstick. It's also great to …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;I took look at &lt;a href="https://brickset.com/article/79600/review-71407-cat-peach-suit-and-frozen-tower"&gt;another one&lt;/a&gt; of the Princess Peach-themed Super Mario LEGO sets that were released at the start of August:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There's no doubt that this set is visually striking - it has an impressive height, bright colours, and a baddie flying around on a broomstick. It's also great to see a costume change for Peach introduced already (and I'm glad that the other characters can use it too—although Luigi did need a software update in order to understand).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;One more to go in this batch of reviews!&lt;/p&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>Elsewhen 1.5: Time Zones, Translated</title><link href="/2022/07/28/elsewhen-15-time-zones-translated/" rel="alternate"></link><published>2022-07-28T09:00:00+01:00</published><updated>2022-07-28T09:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-07-28:/2022/07/28/elsewhen-15-time-zones-translated/</id><summary type="html">&lt;p&gt;We've recently released &lt;a href="https://tildy.dev/elsewhen"&gt;Elsewhen&lt;/a&gt; 1.5, a time zone app that I develop with a group of friends. Jason Snell featured it over at &lt;a href="https://sixcolors.com/post/2022/07/get-universal-times-into-discord-and-elsewhere/"&gt;Six Colors&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One app that can help is &lt;a href="https://apps.apple.com/app/elsewhen/id1588708173"&gt;Elsewhen&lt;/a&gt; from &lt;a href="https://tildy.dev/"&gt;The Lovely Developers&lt;/a&gt;, a fun group that sprung out of the Relay FM Discord. Elsewhen lets …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;We've recently released &lt;a href="https://tildy.dev/elsewhen"&gt;Elsewhen&lt;/a&gt; 1.5, a time zone app that I develop with a group of friends. Jason Snell featured it over at &lt;a href="https://sixcolors.com/post/2022/07/get-universal-times-into-discord-and-elsewhere/"&gt;Six Colors&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One app that can help is &lt;a href="https://apps.apple.com/app/elsewhen/id1588708173"&gt;Elsewhen&lt;/a&gt; from &lt;a href="https://tildy.dev/"&gt;The Lovely Developers&lt;/a&gt;, a fun group that sprung out of the Relay FM Discord. Elsewhen lets you quickly set a date and time and then translate it — either into a bunch of human-readable time zones, or into Discord’s time-code format.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="/assets/elsewhen.png"&gt;&lt;/p&gt;
&lt;p&gt;The latest version not only showcases a brand new UI and the ability to create and save groups of time zones, but also brings it to the Mac for the first time. If you ever have the need to share a given time in a multitude of time zones around the world, or are part of an iternational Discord community where their time codes feature comes in handy, &lt;a href="https://apps.apple.com/app/elsewhen/id1588708173"&gt;give it a whirl&lt;/a&gt;. It's been a blast working on it.&lt;/p&gt;</content><category term="Development"></category><category term="Apps"></category></entry><entry><title>My D&amp;D Adventures</title><link href="/2022/07/26/my-dd-adventures/" rel="alternate"></link><published>2022-07-26T15:00:00+01:00</published><updated>2022-07-26T15:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-07-26:/2022/07/26/my-dd-adventures/</id><summary type="html">&lt;p&gt;When I first got into D&amp;amp;D a year or so ago, I created my first character for a play-by-post (PbP) game called &lt;em&gt;The Lost Jungles of Rabbad&lt;/em&gt;. Since then, I've joined other PbP games, played a few live one-shots (via video call), starting running my own PbP game with …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When I first got into D&amp;amp;D a year or so ago, I created my first character for a play-by-post (PbP) game called &lt;em&gt;The Lost Jungles of Rabbad&lt;/em&gt;. Since then, I've joined other PbP games, played a few live one-shots (via video call), starting running my own PbP game with a pre-rolled adventure from D&amp;amp;D Beyond, fought other players in two player-vs-player (PvP) arenas, and play-tested a couple of new campaign ideas from our DM.&lt;/p&gt;
&lt;p&gt;I hope to write more about my characters in the future, but here's a summary of the games so far.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;The Lost Jungles of Rabbad&lt;/strong&gt;: PbP, playing as &lt;em&gt;Elmer Raloren&lt;/em&gt;, a noble-born High Elf Wizard (School of Abjuration). Currently at level 6. A homebrew adventure run by our DM, Rob, in a world of his design. I wrote a &lt;a href="/2022/07/07/the-lost-jungles-of-rabbad/"&gt;summary of this campaign&lt;/a&gt; previously.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;A Darkness Gathering&lt;/strong&gt;: PbP, playing as &lt;em&gt;Dagoth the Ancient&lt;/em&gt;, a Bugbear Paladin (Oath of the Ancients). Currently at level 5. A campaign that a first-time-DM, Jake, has adapted from an old 2e adventure, I believe. It started out as &lt;em&gt;&lt;a href="https://www.dndbeyond.com/sources/wa/frozen-sick"&gt;Frozen Sick&lt;/a&gt;&lt;/em&gt;, a free sourcebook on D&amp;amp;D Beyond, which the players quickly completed and Jake transitioned.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Princess Bride&lt;/strong&gt;: PbP, playing as &lt;em&gt;Stardust Nightwhisper&lt;/em&gt;, a Fairy Bard. Currently at level 3. The game was conceived of and run by Nic, who had to put it on pause after he and his wife had a baby! Star, as my character was known by, is waiting patiently for when the game resumes and I can play a bard once more!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Wave Walker&lt;/strong&gt;: PbP, playing as &lt;em&gt;Kaith&lt;/em&gt;, an irritable Aarakocra Monk. Currently at level 2, the game was started by another first-time DM, Madi, in a world of her own creation. She ended up not having the time to continue it, so it is currently on haitus, but hopefully will return!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Wave Walker: Windborn Demons&lt;/strong&gt;: Although Madi didn't have the time to full a full-blown campaign, she plans to run a series of smaller one-shots for characters in the &lt;em&gt;Wave Walker&lt;/em&gt; world, starting with Kaith. The game has only just begun, but I am excited because I was enjoying roleplaying Kaith's surly demeanour, and am looking forward to attempting to play a monk in combat.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Winter's Crest&lt;/strong&gt;: A live playtest of a winter-themed one-shot campaign Rob was writing, playing as &lt;em&gt;Peregrin Puddlefoot&lt;/em&gt;, a Halfling Bard, at level 5. The campaign was very fun, and we were successful as a party—although there were definitely times it felt like we weren't going to be!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Dragon of Icespire Peak&lt;/strong&gt;: PbP, where I'm the DM! A pre-rolled &lt;a href="https://www.dndbeyond.com/sources/doip"&gt;adventure on D&amp;amp;D Beyond&lt;/a&gt;, I'm having a lot of fun making it my own. The characters are currently at level 3, though they chickened out of completing the latest job, which would have earned them a level bump. One of them was bitten by a Wererat, so they're currently distracted by that.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Hawkstone Alliance&lt;/strong&gt;: A series of live games played in Rob's world, with a rotating set of players each time. Playing as &lt;em&gt;Tabasco&lt;/em&gt;, a level 4 Tabaxi Artificer (Alchemist), I've currently been involved in two adventures so far of the four that have been played.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Pit: The Isle of Death&lt;/strong&gt;: A PbP PvP game, playing &lt;em&gt;Olrim&lt;/em&gt;, a level 10 Fallen Aasimar Paladin Oathbreaker. There were five others in the game, and Olrim ultimately came second, and was &lt;em&gt;so close&lt;/em&gt; to beating Skulkas!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Pit: The Temple of the Light&lt;/strong&gt;: The second PbP PvP game, this time playing &lt;em&gt;Kolasi&lt;/em&gt;, a multiclassing Zariel Tiefling - level 3 Rogue, level 7 Paladin. This is my first attempt at multiclassing, and I find level 10 pretty difficult to work with (there are so many options). We're working in pairs this time, but it's not going particularly well for Kolasi or his team mate - somebody brought a pack of bears and a dragon to the fight, which was terribly unfair of them!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We're also playtesting a new campaign idea from Rob, which I won't say much about other than it's not D&amp;amp;D-based this time, but uses fate dice. In the first playthrough I played as &lt;em&gt;Kalamae, Goddess of Life and Destiny, Mother of Creation, Watcher of the Sands&lt;/em&gt;, and in the second (currently in-progress) as &lt;em&gt;Sa'khuna, God of the Night and the Underworld, Lord of Darkness, Keeper of the Keys.&lt;/em&gt; It's a lot of fun!&lt;/p&gt;
&lt;p&gt;One of the most fun aspects of character creation is their visual design, and &lt;a href="https://www.heroforge.com/"&gt;Hero Forge&lt;/a&gt; is a fantastic place to get inspiration and build colourful 3D models. You can even buy them as STL files or 3D printed figures for your in-person games, though I haven't done that yet. Here's what all my characters look like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Hero Forge designs of my characters" src="/assets/heroes.png"&gt;&lt;/p&gt;
&lt;p&gt;I never realised that D&amp;amp;D could be as fun as all this. I have found a fantastic group of people to play with and seeing everybody's creativity is truly amazing.&lt;/p&gt;</content><category term="D&amp;D"></category></entry><entry><title>LEGO Review: 71403 Adventures with Princess Peach</title><link href="/2022/07/26/lego-review-71403-adventures-with-princess-peach/" rel="alternate"></link><published>2022-07-26T00:00:00+01:00</published><updated>2022-07-26T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-07-26:/2022/07/26/lego-review-71403-adventures-with-princess-peach/</id><summary type="html">&lt;p&gt;LEGO's expanding their Super Mario range this summer, and I've written a review of the latest character to the lineup, Princess Peach, over on &lt;a href="https://brickset.com/article/79599"&gt;Brickset&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This year, another well-known figure from the Mushroom Kingdom joins the lineup, with &lt;a href="https://brickset.com/sets/71403-1"&gt;71403&lt;/a&gt; Adventures with Peach! The previous two starter courses were designed to …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;LEGO's expanding their Super Mario range this summer, and I've written a review of the latest character to the lineup, Princess Peach, over on &lt;a href="https://brickset.com/article/79599"&gt;Brickset&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This year, another well-known figure from the Mushroom Kingdom joins the lineup, with &lt;a href="https://brickset.com/sets/71403-1"&gt;71403&lt;/a&gt; Adventures with Peach! The previous two starter courses were designed to provide everything you need to get going with the range, even if you don't have the previous sets, and Peach is no different, and is in fact the largest of the three.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="LEGO Reviews"></category></entry><entry><title>The Lost Jungles of Rabbad</title><link href="/2022/07/07/the-lost-jungles-of-rabbad/" rel="alternate"></link><published>2022-07-07T00:00:00+01:00</published><updated>2022-07-07T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-07-07:/2022/07/07/the-lost-jungles-of-rabbad/</id><summary type="html">&lt;p&gt;&lt;em&gt;It is high summer in Illwind, the cool air off the sea balanced well against the heat from the desert to the east. The port town is busier than ever today, with the Feast Of Forgotten Gods in full swing. All throughout the streets, children run with green and yellow …&lt;/em&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;em&gt;It is high summer in Illwind, the cool air off the sea balanced well against the heat from the desert to the east. The port town is busier than ever today, with the Feast Of Forgotten Gods in full swing. All throughout the streets, children run with green and yellow streamers, horns and whistles blaring. In the town square, the inns have thrown open their doors, each serving feasts for the revellers, here you see a whole buffalo being roasted, there the largest fish pie you've ever seen. The smells and sounds are a heady mix, not to mention the free flowing beer, wine, ale and mead.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Most of the festival goers are gathering around here, to enjoy the food and watch the Momerie taking place there. This year telling the tales of a lost goddess of the plains, who fell in love with a mortal man, and forsook her divine power to live and age and die at his side.&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Welcome to Illwind, a small city-state bordering the jungle, the sea, and the desert. This is a town of Rob's creation, one of many settings in the large world that he's created as a Dungeons and Dragons (D&amp;amp;D) game master, where he runs many campaigns for experienced and new players alike.&lt;/p&gt;
&lt;p&gt;About a year ago, I joined my first Dungeons and Dragons group. It's something I'd been vaguely interested in, but had never had the opportunity to get involved with. These games were set up by Rob as a way to introduce new people to the hobby, and play in a no-pressure, no-rush environment as text chat in a private Discord server. Play-by-post, as it's called, means it doesn't matter that none of our time zones line up, or if we're busy with "life" - we can play at our own pace, and somebody's absence only holds up the storyline during the more rigid turn-based combat parts. I eagerly joined, and was grouped together with four others into a campaign called &lt;em&gt;The Lost Jungles of Rabbad&lt;/em&gt;, the initial hook being described as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Jungles of Rabbad are a wild and unexplored wilderness, replete with tales of lost cities, roaming undead and wild forgotten beasts. Two weeks ago, a party from the Temple of Oghma left on a expedition to find a hidden temple. Three days ago, contact was lost. Someone needs to go in and get them....&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We then created our characters, starting at Level 2, and put together this band of misfits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Elmer Raloren&lt;/strong&gt;, a male High Elf wizard,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Deimos&lt;/strong&gt;, a male Feral Tiefling rogue,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sumunar&lt;/strong&gt;, a female Half-Orc barbarian,&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tylress, the Victorious&lt;/strong&gt;, a male Dragonborn fighter, and&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Kosta Dragonstone&lt;/strong&gt;, a male Hill Dwarf cleric.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It was a good mix - a squishy spellcaster, a sneaky rogue, a couple of melee fighters, and a healer. It was time to jump in, and start playing the game.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The campaign has now been running for almost a year, and the characters have levelled up from two to six. A lot has happened, some of it following the initial path of the DM's campaign, and much of it not! I thought I would write up the campaign from the start to where we are now, summarising each event, as a log for future reference.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Alb's Assignment&lt;/h3&gt;
&lt;p&gt;The characters, never having met each other before, all (except Sumunar) come together in an inn in Illwind, &lt;em&gt;The Half-Turned World&lt;/em&gt;, presided over by the barkeep, &lt;strong&gt;Undril&lt;/strong&gt;. New to the others, Tylress is a regular, a place he meets with his friend &lt;strong&gt;Sylvie&lt;/strong&gt; (an elf with severe PTSD). Together, the crew head on down to the docks in search of &lt;strong&gt;Alb&lt;/strong&gt;, a man known in the town for offering coin in exchange for jobs, not all of which are legal.&lt;/p&gt;
&lt;p&gt;Joined by Sumunar on their way onto Alb's boat, &lt;em&gt;The Orphans Lament&lt;/em&gt;, they convince Alb of their competence by way of a fight against four animated and armed mannequins. He promises them 30 gold now, and 50 gold on return, for delivering a chest to &lt;strong&gt;Fulsi&lt;/strong&gt; at the &lt;em&gt;Farr Inn&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;After deceiving Alb's minions and getting 45 gold out of them instead, they head off to the south towards the inn, a midpoint on the road between Illwind and Barrow's Edge, a journey of a few days.&lt;/p&gt;
&lt;h3&gt;Nib and Jul&lt;/h3&gt;
&lt;p&gt;During the second day on the road, the group meet a pair of elves, destined for Barrow's Edge, and they fall into travel together. These are the siblings &lt;strong&gt;Nib&lt;/strong&gt;, a white-haired bard, and &lt;strong&gt;Jul&lt;/strong&gt;, a mute monk with some unknown dark magic about her. The group learn that the pair have been hired by The General (the leader of the barracks town Barrow's Edge), on a "dangerous and urgent" mission, so of course Deimos offers their services.&lt;/p&gt;
&lt;p&gt;Tylress is less than convinced about Jul, warning the rest of the group against her, which almost results in a fight on the road.&lt;/p&gt;
&lt;h3&gt;The Farr Inn&lt;/h3&gt;
&lt;p&gt;At the inn, Elmer greets Fulsi (to whom he apparently owes coin), and they take the chest round to the barn at the back. Fulsi runs an illegal fighting ring from here, and Sumunar taps in to take her turn in a bout, losing to a tall goliath, &lt;strong&gt;Xeri&lt;/strong&gt;. Exhausted, the party all retire to bed.&lt;/p&gt;
&lt;p&gt;Tylress is woken in the night by Jul, gesturing to him to head outside in the rain. She challenges him to a fight, to put their previous quarrel behind them. It's tough, but Tylress is victorious, knocking Jul unconscious.&lt;/p&gt;
&lt;p&gt;In the morning, the party awake. Deimos finds a small bronze coin with a compass engraved on it tucked in his pack - the assumption is it came from Nib, but Nib denies all knowledge of it.&lt;/p&gt;
&lt;h3&gt;Bandits on the road!&lt;/h3&gt;
&lt;p&gt;On the road from the &lt;em&gt;Farr Inn&lt;/em&gt; down to Barrow's Edge, the party is stopped by a group of figures in green uniforms, two mounted on horses. They demand a toll for usung the road, "in the Queen's Name". The group doesn't fall for this, and a fight breaks out. The bandits are dispatched, along with one of the horses (unfortunately), and Elmer takes over looking after the other horse, whom he names Rafael.&lt;/p&gt;
&lt;p&gt;The bandits all have matching tattoos on their wrists of golden stars, that Kosta recognises as the mark of an undead cult that's been operating out of the jungle. Rumours say they're trying to build an army!&lt;/p&gt;
&lt;p&gt;Kosta calls upon Turn Undead, to make sure there are no undead around. Nothing happens, other than Jul winces as the shockwave from the spell passes over her.&lt;/p&gt;
&lt;p&gt;As night falls, the party share some of the elves' wine. Sumunar is plagued by dreams of burning cities, of skeletons crawling out of shallow graves, of shambling undead clawing at her face, and Nib sleeps badly, but nobody else is affected.&lt;/p&gt;
&lt;h3&gt;Barrow's Edge&lt;/h3&gt;
&lt;p&gt;Reaching the city after lunch, Nib leads the group to meet with The General, a white dragonborn. She presents them with a rough, old map of the jungle, and tasks them with the following:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"The other planes are slowly encroaching on us, and this is where we believe the key, and the lock, are. I need you to go here, find the key, find the lock and seal the gates again."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;They're looking for the source of the weak points in the lines between the planes of existence, and they sent in two sets troops to deal with it. They were all lost, only one person returned.&lt;/p&gt;
&lt;p&gt;The group are given three old texts relating to the jungle:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;The Fulgrin Lament&lt;/em&gt;, written in Infernal. Fulgrin is a old myth, a fallen angel who raised a host against the gods of old, but banished to a distant plane.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Da Dark Under&lt;/em&gt;, written in Orcish. It appears to be the written history of an orc warband.&lt;/li&gt;
&lt;li&gt;Written in Celestial, it's a collection of divine rituals and rites.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kosta heads to the infirmary to go and talk with the only surviving member of the scouting group, a green tiefling called &lt;strong&gt;Hoc&lt;/strong&gt;. She's missing a hand and an eye, and constantly speaking wordlessly, but uncommunicative.&lt;/p&gt;
&lt;p&gt;Kosta contacts some celestial power, a being that appears to speak through him, who pours energy into Hoc to help her speak:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;...from beneath one by two by one beneath the trees and the screams and the dark deep deeper deep...&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The group learn they'd been in the jungle for a week or so, lost their healer to a group of undead, who they'd then followed south to the river, where there was a long abandonded camp across the water. They found an altar, headed down some dark, wet steps beneath it, that just ended abruptly.&lt;/p&gt;
&lt;p&gt;Kosta's new celestial patron then helps heal the tiefling, replacing her missing eye with a jet black orb, before the Barrow's Edge healers step in.&lt;/p&gt;
&lt;h3&gt;The Celestial&lt;/h3&gt;
&lt;p&gt;Kosta reveals that the past few days he's been … communing with a higer power. The Celestial, some kind of god/demon, is able to take over Kosta's body, and speak through his voice. This appears to be the result of some kind of deal, details are scarce. It was the source of the power that helped heal Hoc, and it is quite happy to help in destroying any undead.&lt;/p&gt;
&lt;p&gt;It also does not seem to like Jul. It has told Kosta she is "touched by darkness", and that the group needs to "deal with her". Elmer's unable to get anything out of Nib, other than vague talk of dangerous missions "up north" to look for a lost tribe of elves; and likewise Deimos out of Jul.&lt;/p&gt;
&lt;p&gt;That night, Deimos tails Jul to a building in Barrow's Edge, which appears to be a tailors. She returns emptyhanded. Breaking in, Deimos finds nothing untoward inside.&lt;/p&gt;
&lt;h3&gt;Into the Jungle&lt;/h3&gt;
&lt;p&gt;The next morning, Nib's been looking through the book written in celestial, and reveals that there is talk of binding spells that "lock" gates between the planes, and how to maintain them. This has previously been done at "the hollow of the world".&lt;/p&gt;
&lt;p&gt;Jul disappears, and returns with a black bag slung over her shoulder. She doesn't mention it, other than to say it contains "supplies".&lt;/p&gt;
&lt;p&gt;The General presents the group with a set of cloaks that offer some camoflage in the jungle, and after obtaining a slightly better-drawn map from the local cartographer's, they set off, heading into the jungle in the general direction of a wizard's tower marked on it.&lt;/p&gt;
&lt;p&gt;There's no path through the jungle, the group having to pick their way over the tree roots etc. Passing a tree with an ancient small golden star carved into it, similar in design to the bandits' tattoos, they stop to let Elmer cast a ritual to detect magic. The star glows of abjuration and enchantment, and there's a similar one in trees to the north and the south, forming a sizeable magic circle, amplfying some arcana within, serving as a ward of the area.&lt;/p&gt;
&lt;p&gt;Tylress destroys the magic in the star with his greatsword, with seemingly no effect to the rest of the sigils, and the team pass through further into the jungle.&lt;/p&gt;
&lt;h3&gt;The Clearing&lt;/h3&gt;
&lt;p&gt;The group comes to a clearing, which contains a large stone ring with four pillars surrounding it. Three of the pillars have a glowing red stone atop them, slowly pulsing. As Deimos circles the clearing to get a better look, the party are attacked by the vines, and have to fight hard to free themselves and clear the creatures. Deimos spends much of it poisoned and entrapped, with Kosta dolling out regular healing.&lt;/p&gt;
&lt;p&gt;Kosta's patron seems to believe it's being caused by "the darkness in Jul".&lt;/p&gt;
&lt;p&gt;Eventually the creatures are cleared, the last one running into the foliage and disappearing. Poking about, a fourth red crystal is found on the ground, while Elmer scales a pillar and investigates the stone altar. It turns out to be some kind of teleportation circle. The group decide to rest for the night before activating the circle with the fourth crystal, and the conversation turns to their life stories.&lt;/p&gt;
&lt;h3&gt;Tylress' Story&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Tylress sighs&lt;/em&gt; "Fine, if nobody will tell my story then I will tell it myself. I'm sure many of you have met a variety of Dragonborn, but us reds are a particularly warfaring lot. Like my brethren I rose through the ranks, conquest after conquest. Everyone loses a battle, but I never lost a war. It's how I earned my title of "The Victorious". But I have honor, and I will not commit atrocities for the sake of it. Unfortunately others do not share this mindset. They see the blood and death as sport. And since I hadn't yet reached the highest rank, there were plenty of bastards above me who would rather have their fun than honor. One day, I was instructed to lead my men into a village of elves and to slaughter them all. Men, women, and children. I refused. My commander seemed to be waiting for this moment. I was set up. Apparently, he felt threatened by a younger and more skillful warrior. He had me arrested and charged with insubordination. I was stripped of my rank and banished."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Deimos' Story&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Deimos hesitates for a moment and takes a long drink before sighing.&lt;/em&gt; "I suppose I did start this. Well I was born a poor devil child and have no idea where I'm actually from or any of those little details. I was a foundling near a small provincial farming village by a wonderful human family. They overlooked...well all of this..." &lt;em&gt;he indicates his wings and rather demonic appearance.&lt;/em&gt; "They raised me alongside their real daughter as a member of the family and taught me some of the finer arts." &lt;em&gt;He nods to to cook pot.&lt;/em&gt; "They made the decision to hide my appearance from the locals, which seems insightful considering what comes next. I attended the small human school and survived as the &lt;em&gt;sickly&lt;/em&gt; child in robes. On the farm at night I was encouraged to fly and stretch my wings. All was good until...that day. I was in school as usual as for some reason a fire broke out at the school. As the students were running out, I heard a scream from within. As became apparent in that last fight, I enjoy a certain resistance to fire so I ran back to help. Well I may be resistant but not so much the robes." &lt;em&gt;Deimos is clearly uncomfortable at this point.&lt;/em&gt; "I was able to pull the boy out, but...didn't make it in time. He didn't survive, and neither did my disguise. I probably don't need to detail what happened when the not-particularly open minded townsfolk saw...well me...carrying a dead child from a fire that isn't having any effect on him." &lt;em&gt;A bit of sadness combined with anger is apparent now.&lt;/em&gt; "Well there's a reason I'm not a &lt;em&gt;huge&lt;/em&gt; fan of pitchforks. The mob realized who I was and proceeded to the farm.  I was...too late to save my parents, but managed to pull my sister [Marlena] out before they could get her. I flew us as far and fast as I could. In the chaos of the next few days we were separated. I've been on my own, surviving and trying to find out what happened to her since then.”&lt;/p&gt;
&lt;p&gt;“I've gotten pretty good at the survival part, but haven't really made any progress on the other, and generally don't stay in one place long enough to...enjoy...a similar reception." &lt;em&gt;Deimos is very clearly out of quips at this point and sits in silence, taking another long drink.&lt;/em&gt; &lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;The Blackened Figure&lt;/h3&gt;
&lt;p&gt;During Deimos' shift, a figure steps out into the clearing, a figure only he can see. A man, about Deimos' age, half his face burnt away. He tells Deimos that they met, many years ago, and it was Deimos who did that to him, and that he will always be there waiting for him. None of the others in the group are able to see or hear the figure.&lt;/p&gt;
&lt;p&gt;Deimos tells the others, believing it to be the boy he tried to save.&lt;/p&gt;
&lt;p&gt;During Kosta's shift that night, he casts Detect Magic, and sees that Jul glows brightly with necromancy, and the bag she is carrying with abjuration magic. He fights with his patron, The Celestial, who wants him to fight Jul and take her out. An internal argument between two higher powers happens within him.&lt;/p&gt;
&lt;p&gt;In the morning, he confronts Nib about it, who is defensive and protective of his sister. Nib reveals that Jul has done a deal with something, something Kosta or The Celestial find distasteful, but that it is not their business. She is not evil or corrupt.&lt;/p&gt;
&lt;h3&gt;Teleportation&lt;/h3&gt;
&lt;p&gt;Deimos and Elmer use mage hands to place the crystal atop the final tower, and a dark space appears in the middle of the ring. Obviously, the group all jump through!&lt;/p&gt;
&lt;p&gt;They find themselves in the basement of a half ruined church or temple, still in the middle of the jungle. The alter glows with a magic of an unknown school. It's engraved with an incantation of an offering to The Dark One, possibly relating to Kiaransalee, a now-dead Drow god of revenge and undeath.&lt;/p&gt;
&lt;h3&gt;Crocodiles&lt;/h3&gt;
&lt;p&gt;The group leave the temple, and head towards the sound of running water. They soon come to a river, which they attempt to swim across but are beset by giant crocodiles. It's a tough crossing, but they make it to the other side.&lt;/p&gt;
&lt;h3&gt;Katrina&lt;/h3&gt;
&lt;p&gt;The land this side is less jungle, more swamp. There is a large clearing to the south, with many gravestones made of reclaimed wood dotted across it, arranged in a wide spiral, culminating at a handful of buildings in the middle. Somebody watches them from a shaded porch, and Deimos approaches, hailing them. Their name is Katrina, they are a survivor from &lt;em&gt;The Eli Flyer&lt;/em&gt;, a ship that ran aground. The rest of the crew are marked by the gravestones, and Katrina says she remains here to keep the woods nearby free of bodies, lest the &lt;strong&gt;Golden Hands&lt;/strong&gt; raise them as undead - the cult with the star tattoos.&lt;/p&gt;
&lt;p&gt;She seemingly doesn't realise that the graves are in a spiral, and says that she cannot find her way "out". Deimos offers to help, once the group's current mission is completed. Elmer determines that the place is infused with enchatment magic, and Katrina herself with transmutation magic. He confronts her about this, and she says she will release Deimos from his enchantment when they have destroyed a red crystal atop a nearby tower, which will remove the binds keeping her there.&lt;/p&gt;
&lt;p&gt;Having little choice, they head towards the tower she indicated.&lt;/p&gt;
&lt;h3&gt;Elmer's Invisible Man&lt;/h3&gt;
&lt;p&gt;That night, during Elmer's shift, a figure steps into the clearing, invisible aside from an outline against the trees. As Elmer approaches, it says nothing but:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HELP I. YOU HELP I. I YOU. I ARE YOU. HELP...&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It disappates at Elmer's touch.&lt;/p&gt;
&lt;h3&gt;The Red Hammers' Tower&lt;/h3&gt;
&lt;p&gt;The tower sits within a square clearing, about five stories tall, with a red glow at the top. The top stories are half-exploded, with the chunks of masonry blown out but hovering in mid-air, as if the explosion had been paused. Deimos attempts to talk his way into the tower, but (of course) it turns into a fight, with the guards calling Katrina "the defiler", and it is their duty to keep her bound.&lt;/p&gt;
&lt;p&gt;During the fight with the guards, an enormous bird (a roc) joins the fight, causing trouble for Deimos' usual flying tactics. The group dispatch the guards, but one flees. Nib is pushed from the top of the tower, and hits the ground, dead. Deimos blames himself, for his enchantment causing them to head to the tower. Kosta blames himself for abandoning his cleric path making a deal with another patron. &lt;/p&gt;
&lt;p&gt;Deimos destroys the crystal, and with it, the entire tower collapses. Tylress grabs Nib, picks him up, and runs off into the trees. Jul takes Rafael and follows. The others rest, badly hurt.&lt;/p&gt;
&lt;p&gt;Tylress takes Nib back to the clearing with the graves, to Katrina. All the graves are on fire. In return for a future favour, she is able to bring Nib back, though he is not quite the elf he was before. He is cold, his eyes misty, his skin grey.&lt;/p&gt;
&lt;h3&gt;Deimos' Dream&lt;/h3&gt;
&lt;p&gt;The others make it back to the clearing, finding Jul lost in the woods. Resting for the night, Deimos finds himself on an endless plain of black sand, where he meets Katrina, an old man, and a devil around a campfire. They call themselves allies against oblivion, saying their name is &lt;strong&gt;Gargauth&lt;/strong&gt;. They thank him.&lt;/p&gt;
&lt;p&gt;In the morning, Kosta reveals he is familiar with the name Gargauth, as the Tenth Lord, the banished Lord of Hell.&lt;/p&gt;
&lt;h3&gt;Zombie T-rex&lt;/h3&gt;
&lt;p&gt;Sounds of movement lead the party to a clearing, where a load of zombie workers are clearing out a mine entrance, guarded by a group of living overseers, including a tabaxi that they had tracked riding a zombie t-rex. Deimos flies over, invisible, and sees they are pouring over a map. The group attempt to forge the map and swap it, but the swap goes badly and they end up fighting a load of zombies and the zombie t-rex ridden by the tabaxi, &lt;strong&gt;Night Bane&lt;/strong&gt;. The rex also keeps vomiting up more zombies. It is a tough fight, with Elmer being seriously injured by the dinosaur, but they are victorious with the help of a jar of eyes that Sumunar had, turning into a pack of wolves when smashed.&lt;/p&gt;
&lt;p&gt;The tabaxi is tied up, unconscious. When he wakes, Deimos enchants him to believe the group are his friends, and he tells them that he "serves at the pleasure of Vecna". The zombies were digging to search for the key, otherwise known as "the Bone", which fits "everything, and opens the whole of creation to The Ascended One". He reveals the location of their current base. The team untie him, but as he is walking away, Kosta swings his warhammer (newly-acquired from the tabaxi himself) and hits the cat, Sumunar following up with a killing blow.&lt;/p&gt;
&lt;h3&gt;The Map&lt;/h3&gt;
&lt;p&gt;After studying the map the party retrieved, Nib translates the text on it. There are four circles surrounded by text in Celestial, with the smaller circles also written in Abyssal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Big circle, bottom left: &lt;em&gt;In The Dark, Seek The Light, Open The Door&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Top left: &lt;em&gt;The Scale Needs Balance, The Scale Demands Fire&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Top right: &lt;em&gt;The Deep Is The Core, The Door&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Bottom right: &lt;em&gt;The Star Shall Die, The Stone Frost&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Kosta's Freedom&lt;/h3&gt;
&lt;p&gt;Ashamed by his behaviour regarding the tabaxi, Kosta pleads with his patron Pelor to be free from his deal with The Celestial. He's struck by a blinding white light, and wakes to find he feels free of the influence of the second god.&lt;/p&gt;
&lt;h3&gt;The Mine&lt;/h3&gt;
&lt;p&gt;Deimos is told by the old man from his dreams that going down the mine is going to be bad. "Take light. It's less… underneath the world, more like between."&lt;/p&gt;
&lt;p&gt;The party take a long rest, but during the first watch Tylress feels the mine calling to him, and heads down into it, first on steps, then climbing down ropes. Deimos and Sumunar also feel the pull, but Nib and Elmer slap them out of it. They head down after Tylress, who has found his way to a rubble-filled tunnel, which he starts clearing. Deimos heads down after him, and they have an argument, but eventually come back out, and they all complete their rest.&lt;/p&gt;
&lt;p&gt;All down in the mine the next day, crossing some black water, Tylress, Kosta, and Sumunar are dragged below into the inky blackness, and disappear. At this, the party is split.&lt;/p&gt;
&lt;h4&gt;Deimos, Elmer, Nib, and Jul&lt;/h4&gt;
&lt;p&gt;Continuing on, the party are attacked by a pair of basilisks, which turn Deimos and Nib to stone. After defeating them, Jul and Elmer explore the rest of the mine, finding more red crystals, which they destroy. At each impact, their reality shifts briefly into an alternative space, and then snaps back. At one point, Jul also vanishes and Elmer is alone. He eventually finds her and helps save her from a gelantinous cube. &lt;/p&gt;
&lt;h4&gt;Tylress, Kosta, and Sumunar&lt;/h4&gt;
&lt;p&gt;The three fall through into a small circular room, with a red crystal high above. Exploring through the door, the find other rooms, and some statues of a tiefling and an elf - Deimos and Nib, presumably. They also smash red crystals they find, after one of which Kosta disappears in a flash of bright light. Eventually, Sumunar opens a door and find themselves face to face with Elmer and Jul...&lt;/p&gt;
&lt;h3&gt;The Staff and Dawn Song&lt;/h3&gt;
&lt;p&gt;Suddenly, a bright blinding light fills the area and Deimos and Nib return from stone, but trapped in a cage. Sumunar is back with Elmer and Jul, Kosta and Tylress have disappeared…&lt;/p&gt;
&lt;p&gt;They find their way to the room which Deimos and Nib are caged in, and fight a swirl of ink that's protecting a staff in the middle. They escape with the staff, out the mine, only to be met by Dawn Song, who fights them for the staff. Deimos is enchanted, and attacks Nib, and the party give up the staff to save themselves. Dawn Song disappears into the jungle.&lt;/p&gt;
&lt;h3&gt;Fulgrin's Lament&lt;/h3&gt;
&lt;p&gt;During a rest, Deimos discovers a couple of passages from the Fulgrin's Lament book:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;"…and the cowards bound him there, by staff and by blade, by hammer and by helm, rather than face their own failures…"&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;"…the ashes, cross-bound about his gate, the wood and glass and steel and gold, held tight by the elemental keys, his door bound, waiting to rise again…"&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;The Camp&lt;/h3&gt;
&lt;p&gt;They find Dawn Song's camp - another open mine, mostly undead; giants, dogs, and dinos. Dawn Song has the staff and the helm. During the night, Elmer creeps over to watch and sees them sacrificing some figures in a number of fires, while the rest chant.&lt;/p&gt;
&lt;p&gt;Meanwhile, Deimos dreams of the endless plain again, and is told:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;These items are parts of the key that will unlock the door. Taking them from where they were held has started to unlock that door. If they get all three, and reach the door, they will open it fully. They will need collecting, and taking to that door to relock the door too. The Crystal Blade is not part of the key, it is part of the lock. As you might expect, it's location is hidden from the likes of us. Last we heard it was in the mountains. The stolen dead will know, seek their camp, it has what you need.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;The Mountains&lt;/h3&gt;
&lt;p&gt;In the mountains, the group find The Dark Sun, a glowing black orb of nothingness inside a volcano crater. While there, they are ambushed by Dawn Song and her crew of undead and skeletons.&lt;/p&gt;
&lt;p&gt;In the fight, Deimos touches the black orb, and disappears. Elmer, Sumunar, and Nib die. Deimos is transported to an endless desert of sand, and finds man sitting beneath a tent at a table. They play a game of cards, Deimos is given &lt;strong&gt;a steel warhammer&lt;/strong&gt;, and is returned to the volcano holding a card. Using the card, Deimos brings Sumunar, Elmer, and Nib back from death. They fight again, and Dawn Song leaves with the staff, promising to come back for the hammer.&lt;/p&gt;
&lt;h3&gt;To the Red Hammers&lt;/h3&gt;
&lt;p&gt;The party decide to go to the Red Hammer's base at Fort Hope and ask for help. On the way, they pass the body of the Red Hammer that fled the tower earlier, killed by arrows, half his face dissolved. The ground gets swampy and they are set upon by a group of frog creatures. They fight them off, and later come across an enormous snail being ridden by mice. This is Meile, a travelling tradesperson. The group pay for passage on the snail, Bessy, to Fort Hope.&lt;/p&gt;
&lt;h3&gt;Qhell&lt;/h3&gt;
&lt;p&gt;At the fort, the group are given bed and board by Jadel, the leader, a friend of Sumunar's. They also offer their help, and that of their clerics, in the fight against Dawn Song.&lt;/p&gt;
&lt;p&gt;Also at the fort the group meet &lt;strong&gt;Qhell&lt;/strong&gt;, an Aarakocra Druid. He is there as a guest of the clerics, and joins the party in their campaign.&lt;/p&gt;
&lt;h3&gt;Fighting Dawn Song. Again&lt;/h3&gt;
&lt;p&gt;Finally, Dawn Song attacks the fort to retrieve the hammer. She brings many zombies, including zombie aarakocra, velociraptors, giants, and an ankylosaurus. The fight is tough, and seemingly not going their way, when...&lt;/p&gt;
&lt;h3&gt;Kosta Returns!&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;A break in the clouds forms, and from it, you see a pillar of light streak down and strike the earth next to Jul. Shielding your eyes, you can see something zip down, crashing to the ground with a thunderous force. The light fades, and you see a dwarf adorned in shining armor. His hair is a brilliant white, and he’s missing an eye, but as he turns to you and smiles, you recognize him instantly.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kosta returns from the heavens! His &lt;em&gt;Turn Undead&lt;/em&gt; proves incredibly effective, and eventually the tide of the battle turns and the group defeat the zombie hordes.&lt;/p&gt;
&lt;h3&gt;The Necrodragon&lt;/h3&gt;
&lt;p&gt;Just as Dawn Song is killed:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;As last of her life force drains away, you hear her whisper,&lt;/em&gt; "I am ascended...."&lt;/p&gt;
&lt;p&gt;&lt;em&gt;As her body slumps to the floor, the blood and viscera that lines it begins to slowly boil. You all see around you, all the bodies and blood, mortal and undead jerk and wither before you, their blood being drawn deeper in to her. And you see her body start to twist, and bulge, a pair of black skeletal wings burst from her back, her claws distend into long talons, with a sickening crack her back breaks and grows, and in her place stands a haggard and undead dragon, it's skin white as her fur and her eyes a deep shimmering blue.  She looks around at you all, and with a deep roar akin to the creaking of a crypt, she lifts into the air, and flies off, limping as she does&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In her wake, she leaves behind the helm, the staff, and various other belongings.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;The Story Continues...&lt;/h3&gt;
&lt;p&gt;And that is where the group is currently up to! We have many questions to answer as we continue: is Dawn Song actually dead? Will the Necrodragon return? Where is the Crystal Blade and can the party find the door and lock it once more?&lt;/p&gt;
&lt;p&gt;The story continues to play out in it's typical PbP fashion, with ebbs and flows. Maybe in another year (or sooner!) I'll write up another update here, but for now… you'll just have to wait and see, won't you?&lt;/p&gt;</content><category term="D&amp;D"></category><category term="The Lost Jungles of Rabbad"></category></entry><entry><title>I'm into pens</title><link href="/2022/07/05/im-into-pens/" rel="alternate"></link><published>2022-07-05T00:00:00+01:00</published><updated>2022-07-05T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-07-05:/2022/07/05/im-into-pens/</id><summary type="html">&lt;p&gt;I'm into pens. There, I said it.&lt;/p&gt;
&lt;p&gt;I've always had a vague, background interest in writing and writing implements. As a child, I had a couple of "teach yourself calligraphy" books, a few calligraphy pens, and I enjoyed finding excuses to use them: writing up the menu for tonight's dinner …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I'm into pens. There, I said it.&lt;/p&gt;
&lt;p&gt;I've always had a vague, background interest in writing and writing implements. As a child, I had a couple of "teach yourself calligraphy" books, a few calligraphy pens, and I enjoyed finding excuses to use them: writing up the menu for tonight's dinner, a sign for my bedroom door, etc. But then computers happened and I started writing by hand a lot less, and when I did, it was with whatever cheap biro happened to be close by.&lt;/p&gt;
&lt;p&gt;Fast forward a few years (too many than I'd like to count), and in 2020 I joined the &lt;a href="https://www.relay.fm/membership"&gt;Relay FM&lt;/a&gt; members Discord. This was a place where people who enjoyed the variety of podcasts that Relay FM offered could socialise and discuss the topics that interested them; I joined mainly because they talked about it so much on &lt;a href="https://relay.fm/upgrade"&gt;Upgrade&lt;/a&gt; and &lt;a href="https://relay.fm/connected"&gt;Connected&lt;/a&gt;, and it seemed like a good place to find new people to chat with.&lt;/p&gt;
&lt;p&gt;Turns out, I've made some of my best friends there. People I talk to every day, who know me better than I know some "in person" friends that I've known for years. But these friends have been a bad influence (on my wallet, at least).&lt;/p&gt;
&lt;p&gt;There's a channel in the Discord for each rough topic that the Relay FM shows cover. For example, there's &lt;code&gt;#tech&lt;/code&gt;, &lt;code&gt;#apple&lt;/code&gt;, &lt;code&gt;#creativity&lt;/code&gt;, &lt;code&gt;#systems-and-themes&lt;/code&gt; etc. It makes sense, then, that there's a &lt;code&gt;#pens&lt;/code&gt;, given that there's an entire show on Relay FM dedicated to them—&lt;a href="https://www.relay.fm/penaddict"&gt;The Pen Addict&lt;/a&gt;. I've listened to the show a couple of times, but it's not one I'm subscribed to, and it never totally grabbed me. However, people sharing photos of their fountain pens, beautiful handwriting in stunning inks, letters they were writing and sending around the world—I wanted in.&lt;/p&gt;
&lt;p&gt;I resisted for a while, I didn't need another hobby to suck up what disposable income I had. So I started small—I asked for suggestions on a daily pen that could replace my cheap biros, nice to write with but nothing fancy. Madi suggested the &lt;a href="https://www.cultpens.com/i/q/ZB02975/zebra-sarasa-gel-rollerball-pen-medium-07mm"&gt;Zebra Sarasa&lt;/a&gt;, and a three-pack dropped through the letterbox shortly afterwards. I was blown away! These were &lt;em&gt;so&lt;/em&gt; much nicer to write with than what I'd been using before, and I was back to finding excuses to write by hand. I took to carrying one around in my pocket (a habit I'd never had before), along with a &lt;a href="https://fieldnotesbrand.com/"&gt;Field Notes&lt;/a&gt; pocket notebook that Madi had kindly sent across the ocean to me, in a package that also contained a whole host of different coloured refills. I was in.&lt;/p&gt;
&lt;p&gt;One of the other members of the Discord, Ellen, had started up a small pen pals group, an offshoot from the official Relay Discord. I joined the group and wrote a couple of letters with the Sarasas, but really I wanted a fountain pen and everything that came with it - the little bottles of ink, the choice of nib size, the process of flushing, cleaning, and refilling, etc. So I asked for advice, took the plunge, and bought a &lt;a href="https://www.cultpens.com/i/q/TW50831/twsbi-eco-fountain-pen-clear"&gt;TWSBI Eco Clear&lt;/a&gt;, and a bottle of &lt;a href="https://www.cultpens.com/i/q/TW69176/twsbi-1791-bottled-ink-18ml"&gt;TWSBI 1791 Orange&lt;/a&gt; ink. I mean, how else was I going to get to write in orange?!&lt;/p&gt;
&lt;p&gt;It arrived (along with a packet of Love Hearts and the invoice held together with a little colourful smiley face paper clip, nice cute touches from &lt;a href="https://www.cultpens.com"&gt;Cult Pens&lt;/a&gt;) and I quickly filled it with the ink and started writing. Needless to say, I love it. I had chosen a medium nib, because I don't like too skinny or too fat writing, and the only thing letting my letters down now is my handwriting!&lt;/p&gt;
&lt;p&gt;Fast forward a few months, and I'm itching for a new colour. Don't get me wrong, I love the orange, but I also fancied a nice vibrant pink. So what was I to do? How could I get the pink, without giving up having the orange easily to hand?&lt;/p&gt;
&lt;p&gt;Clearly, the answer was to get a second fountain pen. (I see how this snowballs, now…) Ellen recommended another starter pen, the &lt;a href="https://www.cultpens.com/i/q/LM30785/lamy-safari-fountain-pen-pink"&gt;Lamy Safari&lt;/a&gt;, which I ordered in pink, with a broad nib this time. (It does need a converter to use bottled inks, as it usually takes a cartridge.) I also intended to add a bottle of &lt;a href="https://www.cultpens.com/i/q/LM62360/lamy-t53-crystal-ink-30ml"&gt;Lamy Crystal ink&lt;/a&gt; in &lt;em&gt;Rhodonite&lt;/em&gt;, which is a vibrant pink, but when the order arrived it turned out I'd actually somehow clicked on &lt;em&gt;Agate&lt;/em&gt;, which is a rather flat grey. I was somewhat disappointed!&lt;/p&gt;
&lt;p&gt;Contacting Cult Pens, they were happy for me to return the Agate and they would send out a replacement Rhodonite, which was very kind of them. I packaged the ink back up and took it off to the post office.&lt;/p&gt;
&lt;p&gt;Ellen and another friend from the Discord, Alex, had been listening to me whine about not getting the pink, and a surprise package dropped through my letter box a day or so later. Opening it up, it contained a bottle of &lt;a href="https://www.cultpens.com/i/q/RB56355/robert-oster-signature-ink-50ml"&gt;Robert Oster Signature ink&lt;/a&gt; in &lt;em&gt;Hot Pink&lt;/em&gt;! Unbeknownst to me, they'd conspired to order me a replacement themselves, and chose Robert Oster in part because it's good ink, but I suspect mostly because it's Australian, and so is Ellen. They have a truly enormous range of colours, and the Hot Pink is fantastic. Exactly what I was after! It's also in a 50ml bottle, which will last me literally forever.&lt;/p&gt;
&lt;p&gt;&lt;img alt="TWSBI Eco with Robert Oster Signature Hot Pink ink" src="/assets/IMG_7608.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;However, I was still going to be getting a replacement of the Lamy Crystal Rhodonite, so I contacted Cult Pens again and asked if they could instead send out a different colour (despite Ellen's protestations that two pinks is not too many pinks, I want a nice range of colours before I start doubling up and comparing!)&lt;/p&gt;
&lt;p&gt;They agreed, and so we come to today: I have a TWSBI Eco (M) inked in Robert Oster Signature Hot Pink, a Lamy Safari (B) with a tiny amount of Lamy Crystal Agate, and a bottle of Lamy Crystal Amazonite (a really lovely turquoise blue) on its way. I can't wait to try that out.&lt;/p&gt;
&lt;p&gt;&lt;img alt="The three inks and two pens described in this post" src="/assets/IMG_8439.jpeg"&gt;&lt;/p&gt;
&lt;p&gt;The only question is: now I have three ink bottles, and just the two pens. There's only one solution, surely… &lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.cultpens.com/i/q/TW50831/twsbi-eco-fountain-pen-clear"&gt;TWSBI Eco Clear&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cultpens.com/i/q/TW69176/twsbi-1791-bottled-ink-18ml"&gt;TWSBI 1791 ink&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://inkyfountainpens.wordpress.com/2021/04/03/ink-review-twsbi-1791-orange/"&gt;Review of TWSBI 1791 Orange on inkyfountainpens&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cultpens.com/i/q/LM30785/lamy-safari-fountain-pen-pink"&gt;Lamy Safari Pink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cultpens.com/i/q/LM62360/lamy-t53-crystal-ink-30ml"&gt;Lamy Crystal ink&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mountainofink.com/blog/lamy-rhodonite"&gt;Review of Lamy Crystal Rhodonite on Mountain of Ink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mountainofink.com/blog/lamy-agate"&gt;Review of Lamy Crystal Agate on Mountain of Ink&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://mountainofink.com/blog/lamy-amazonite"&gt;Review of Lamy Crystal Amazonite on Mountain of Ink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.cultpens.com/i/q/RB56355/robert-oster-signature-ink-50ml"&gt;Robert Oster Signature ink&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://mountainofink.com/blog/robert-oster-hot-pink"&gt;Review of Robert Oster Signature Hot Pink on Moutain of Ink&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="Pens &amp; Ink"></category></entry><entry><title>Python and the Magical OAuth Token</title><link href="/2022/04/25/python-and-the-magical-oauth-token/" rel="alternate"></link><published>2022-04-25T00:00:00+01:00</published><updated>2022-04-25T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2022-04-25:/2022/04/25/python-and-the-magical-oauth-token/</id><summary type="html">&lt;p&gt;A &lt;a href="https://colinsent.me/The-Magical-Self-Rotating-Self-Getting-OAuth-Token-aa8e8a840e9643fd9f4ca8f9e97e53e9"&gt;recent post by Colin&lt;/a&gt; demonstrated a utility class they'd written to handle fetching and refreshing OAuth bearer tokens for APIs and services that are secured that way, to stop you having to worry about it in the majority of your code. For years, I've used a similar class at …&lt;/p&gt;</summary><content type="html">&lt;p&gt;A &lt;a href="https://colinsent.me/The-Magical-Self-Rotating-Self-Getting-OAuth-Token-aa8e8a840e9643fd9f4ca8f9e97e53e9"&gt;recent post by Colin&lt;/a&gt; demonstrated a utility class they'd written to handle fetching and refreshing OAuth bearer tokens for APIs and services that are secured that way, to stop you having to worry about it in the majority of your code. For years, I've used a similar class at work that I wrote to simplify this, and Colin's post prompted me to share it here too.&lt;/p&gt;
&lt;p&gt;The main difference from Colin's solution is that the class I use is a subclass of the &lt;a href="https://docs.python-requests.org/en/latest/"&gt;Requests&lt;/a&gt; &lt;code&gt;Session&lt;/code&gt; object, rather than a stand-alone object. It handles not only fetching and refreshing the bearer token where necessary, but also inserting the correct headers to the requests you make. Here's the entire class (and a couple of helper exception classes):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;requests&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OAuthResponseError&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="ne"&gt;Exception&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OAuthInvalidGrant&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OAuthResponseError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;

&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;OAuthInvalidScope&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;OAuthResponseError&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="k"&gt;pass&lt;/span&gt;


&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;TokenRefreshSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Session&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;

    &lt;span class="n"&gt;ERROR_MAPPING&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;invalid_grant&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OAuthInvalidGrant&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;invalid_scope&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;OAuthInvalidScope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;token_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_client_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client_id&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_client_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;client_secret&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;scope&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_token_url&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;token_url&lt;/span&gt;
        &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="fm"&gt;__init__&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;args&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;kwargs&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;prepare_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Add the access token to the headers&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Authorization&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="sa"&gt;f&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Bearer &lt;/span&gt;&lt;span class="si"&gt;{&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_access_token&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nb"&gt;super&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;prepare_request&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;request&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="nd"&gt;@property&lt;/span&gt;
    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;oauth_access_token&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Return a valid Access Token. Renews the token if it has expired&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_access_token_valid&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;

            &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;client_id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_client_id&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;client_secret&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_client_secret&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;grant_type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;client_credentials&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;scope&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_scope&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;
            &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;Accept&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s2"&gt;&amp;quot;Content-Type&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;application/x-www-form-urlencoded&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;}&lt;/span&gt;

            &lt;span class="n"&gt;response&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;post&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;oauth_token_url&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="n"&gt;headers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;headers&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
            &lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;raise_for_status&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="n"&gt;response_data&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;

            &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
                &lt;span class="k"&gt;raise&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ERROR_MAPPING&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
                    &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                    &lt;span class="n"&gt;OAuthResponseError&lt;/span&gt;&lt;span class="p"&gt;)(&lt;/span&gt;&lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;error_description&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
                &lt;span class="p"&gt;)&lt;/span&gt;

            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_oauth_access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
            &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_oauth_access_token_expiry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;response_data&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;expires_in&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;_oauth_access_token&lt;/span&gt;

    &lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;oauth_access_token_valid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="sd"&gt;&amp;#39;&amp;#39;&amp;#39;Check the validity of the current access token&amp;#39;&amp;#39;&amp;#39;&lt;/span&gt;

        &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;fudged_time&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;minutes&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_oauth_access_token&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kc"&gt;None&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="n"&gt;access_token_expiry&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;getattr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="bp"&gt;self&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;_oauth_access_token_expiry&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;now&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;access_token&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;access_token_expiry&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;=&lt;/span&gt; &lt;span class="n"&gt;fudged_time&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;False&lt;/span&gt;

        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kc"&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The code is relatively simple. As a subclass of &lt;code&gt;requests.Session&lt;/code&gt;, it accepts all the usual arguments, but also requires the OAuth client ID, client secret, scope, and token endpoint. This could be hardcoded, or a default provided in the class definition as we do internally, to avoid having to specify it each time.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;prepare_request&lt;/code&gt; method is part of the &lt;code&gt;requests.Session&lt;/code&gt; mechanism for generating the HTTP call when the library is used. The overriden method in the &lt;code&gt;TokenRefreshSession&lt;/code&gt; object inserts the correct &lt;code&gt;Authorization: Bearer&lt;/code&gt; header and token into the request on behalf of the user.&lt;/p&gt;
&lt;p&gt;As with Colin's solution, the &lt;code&gt;oauth_access_token&lt;/code&gt; property is computed when accessed, and performs the necessary update or refresh should the currently stored token have expired, by posting the client credentials data to the token endpoint provided.&lt;/p&gt;
&lt;p&gt;Here's an example of the class in action:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;session&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;TokenRefreshSession&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
    &lt;span class="n"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;123456&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;client_secret&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;shh&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="n"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;read&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;write&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;etc&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
    &lt;span class="n"&gt;token_url&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://api.my-great-app.com/v1.0/auth&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="n"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;session&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;https://api.my-great-app.com/v1.0/users/23&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The first API call will fetch the token and store it, and subsequent calls (using the same session object) will either use the stored token or fetch a new one as necessary. You never need worry about including the &lt;code&gt;Bearer&lt;/code&gt; header yourself. And, to quote Colin's post:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Your token will magically manage itself, leaving you free to write good code against your favorite API.&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="Development"></category><category term="Python"></category></entry><entry><title>LEGO 71374 Nintendo Entertainment System</title><link href="/2020/08/17/lego-71374-nintendo-entertainment-system/" rel="alternate"></link><published>2020-08-17T00:00:00+01:00</published><updated>2020-08-17T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2020-08-17:/2020/08/17/lego-71374-nintendo-entertainment-system/</id><summary type="html">&lt;p&gt;Beyond my budget (for now!), but the new NES LEGO set looks fantastic:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://brickset.com/sets/71374-1/Nintendo-Entertainment-System"&gt;71374&lt;/a&gt; Nintendo Entertainment System achieves extraordinary realism, potentially surpassing any previous LEGO model in that regard. The external detail is absolutely spectacular and the designers have made splendid use of existing elements to recreate distinctive shapes from …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Beyond my budget (for now!), but the new NES LEGO set looks fantastic:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href="https://brickset.com/sets/71374-1/Nintendo-Entertainment-System"&gt;71374&lt;/a&gt; Nintendo Entertainment System achieves extraordinary realism, potentially surpassing any previous LEGO model in that regard. The external detail is absolutely spectacular and the designers have made splendid use of existing elements to recreate distinctive shapes from the NES. I am particularly delighted with the controller and the casing around the connection ports on the console, both of which could be mistaken for their real equivalents.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hopefully it will be available in the LEGO employee store when I visit Billund for the 2021 Inside Tour next year!&lt;/p&gt;</content><category term="LEGO"></category></entry><entry><title>Junos commit history: who did what?</title><link href="/2019/11/16/junos-commit-history-who-did-what/" rel="alternate"></link><published>2019-11-16T00:00:00+00:00</published><updated>2019-11-16T00:00:00+00:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-11-16:/2019/11/16/junos-commit-history-who-did-what/</id><summary type="html">&lt;p&gt;Junos has always had one fantastic advantage over Cisco's IOS: the ability to stage a pending commit, and see a history of changes, rather than each command immediately being executed on the running config a soon as you hit Enter. &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;show | compare rollback X&lt;/code&gt; command has always been able …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Junos has always had one fantastic advantage over Cisco's IOS: the ability to stage a pending commit, and see a history of changes, rather than each command immediately being executed on the running config a soon as you hit Enter. &lt;/p&gt;
&lt;p&gt;The &lt;code&gt;show | compare rollback X&lt;/code&gt; command has always been able to show you the difference between your current config and what the config was like &lt;em&gt;X&lt;/em&gt; commits ago. However, I've always found it difficult to figure out what exactly was done in a single commit (or batch of commits) if they weren't the most recent. That is, until I learnt of this command: &lt;code&gt;show system rollback compare X Y&lt;/code&gt;! This lets you see the changes that were introduced just between the &lt;em&gt;X&lt;/em&gt; and &lt;em&gt;Y&lt;/em&gt; commits. &lt;/p&gt;
&lt;p&gt;Here's a real life example. Below is the commit history for a device at work. You can see there were a number of batches of commits going back in time where different individuals have done sole changes on the device:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ben@switch&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;commit
&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:06:51&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:49:19&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:43:01&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:42:11&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:41:01&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;5&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:03:53&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;6&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:28:33&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;7&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:25:44&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;8&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:24:53&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;9&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-11-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:23:28&lt;span class="w"&gt; &lt;/span&gt;GMT&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;katerina&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
…&lt;span class="w"&gt; &lt;/span&gt;output&lt;span class="w"&gt; &lt;/span&gt;truncated&lt;span class="w"&gt; &lt;/span&gt;…&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="m"&gt;20&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:16:43&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;21&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:15:27&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;22&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:13:48&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;23&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:13:06&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;24&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:08:43&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;25&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:08:13&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;26&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:06:50&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;27&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-09-13&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:06:12&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;ben&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-08-07&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:21:33&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;stuart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;29&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-08-07&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:21:08&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;stuart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;30&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-08-07&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:18:43&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;stuart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;31&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-08-05&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;09&lt;/span&gt;:06:28&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;stuart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:04:54&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;33&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:02:34&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;34&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:01:31&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;confirmed,&lt;span class="w"&gt; &lt;/span&gt;rollback&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3mins
&lt;span class="m"&gt;35&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:59:30&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;36&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:58:39&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;37&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-19&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:58:03&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;lewis&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;confirmed,&lt;span class="w"&gt; &lt;/span&gt;rollback&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;3mins
&lt;span class="m"&gt;38&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-07&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:58:39&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;bart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;39&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-07&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:07:17&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;bart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;confirmed,&lt;span class="w"&gt; &lt;/span&gt;rollback&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;1mins
&lt;span class="m"&gt;40&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-06-06&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:27:51&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;bart&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;41&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-05-15&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:07:07&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;chris&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;span class="m"&gt;42&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;2019&lt;/span&gt;-05-09&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;:14:43&lt;span class="w"&gt; &lt;/span&gt;BST&lt;span class="w"&gt; &lt;/span&gt;by&lt;span class="w"&gt; &lt;/span&gt;chris&lt;span class="w"&gt; &lt;/span&gt;via&lt;span class="w"&gt; &lt;/span&gt;cli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I needed to find what Stuart and Lewis had each introduced in their batches of changes back in August and June, respectively. This new command makes that trivially easy. &lt;/p&gt;
&lt;p&gt;Stuart's batches of changes were in commits 28–31. Running the following command, I was able to easily extract just what those commits introduced:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ben@switch&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;rollback&lt;span class="w"&gt; &lt;/span&gt;compare&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;edit&lt;span class="w"&gt; &lt;/span&gt;interfaces&lt;span class="w"&gt; &lt;/span&gt;interface-range&lt;span class="w"&gt; &lt;/span&gt;ir_stp_edge&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;member&lt;span class="w"&gt; &lt;/span&gt;ge-0/0/10&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;...&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;member&lt;span class="w"&gt; &lt;/span&gt;ge-0/0/6&lt;span class="p"&gt;;&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;member&lt;span class="w"&gt; &lt;/span&gt;ge-0/0/7&lt;span class="p"&gt;;&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;member&lt;span class="w"&gt; &lt;/span&gt;ge-0/0/8&lt;span class="p"&gt;;&lt;/span&gt;
…&lt;span class="w"&gt; &lt;/span&gt;more&lt;span class="w"&gt; &lt;/span&gt;changes&lt;span class="w"&gt; &lt;/span&gt;…
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that you need to put the higher (older) commit number first, followed by the lower (more recent). Additionally, you need to increase the higher commits number by one, as you want to know what was introduced between those commits, &lt;em&gt;including the oldest one&lt;/em&gt;. &lt;/p&gt;
&lt;p&gt;Likewise, to see what Lewis introduced in his commits, we can run the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ben@switch&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;show&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;rollback&lt;span class="w"&gt; &lt;/span&gt;compare&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;38&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;32&lt;/span&gt;
…&lt;span class="w"&gt; &lt;/span&gt;some&lt;span class="w"&gt; &lt;/span&gt;changes&lt;span class="w"&gt; &lt;/span&gt;...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will definitely save me some time in future!&lt;/p&gt;</content><category term="Networking"></category><category term="Junos"></category></entry><entry><title>Tiny Git Tip</title><link href="/2019/10/10/tiny-git-tip/" rel="alternate"></link><published>2019-10-10T00:00:00+01:00</published><updated>2019-10-10T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-10-10:/2019/10/10/tiny-git-tip/</id><summary type="html">&lt;p&gt;&lt;a href="https://twitter.com/brandur"&gt;Brandur&lt;/a&gt;, on Twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Git tip I wish I'd discovered ten years ago: if you &lt;code&gt;git config --global diff.noprefix true&lt;/code&gt; it removes the silly &lt;code&gt;a/&lt;/code&gt; and &lt;code&gt;b/&lt;/code&gt; prefixes so that when you double-click select one to copy, you get a usable filename instead of a mangled path.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is something …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;a href="https://twitter.com/brandur"&gt;Brandur&lt;/a&gt;, on Twitter:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Git tip I wish I'd discovered ten years ago: if you &lt;code&gt;git config --global diff.noprefix true&lt;/code&gt; it removes the silly &lt;code&gt;a/&lt;/code&gt; and &lt;code&gt;b/&lt;/code&gt; prefixes so that when you double-click select one to copy, you get a usable filename instead of a mangled path.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is something I've always been annoyed by—I'm so glad there's a fix!&lt;/p&gt;</content><category term="Development"></category><category term="Tip"></category><category term="Git"></category></entry><entry><title>NASA Administrator Remembers Mission Control Pioneer Chris Kraft</title><link href="/2019/07/23/nasa-administrator-remembers-mission-control-pioneer-chris-kraft/" rel="alternate"></link><published>2019-07-23T00:00:00+01:00</published><updated>2019-07-23T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-07-23:/2019/07/23/nasa-administrator-remembers-mission-control-pioneer-chris-kraft/</id><summary type="html">&lt;p&gt;Chris Kraft, NASA's first Flight Director, died yesterday, two days after the 50th anniversary of the first man on the moon. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once comparing his complex work as a flight director to a conductor’s, Kraft said, ‘The conductor can't play all the instruments--he may not even be able to play …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Chris Kraft, NASA's first Flight Director, died yesterday, two days after the 50th anniversary of the first man on the moon. &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once comparing his complex work as a flight director to a conductor’s, Kraft said, ‘The conductor can't play all the instruments--he may not even be able to play any one of them. But, he knows when the first violin should be playing, and he knows when the trumpets should be loud or soft, and when the drummer should be drumming. He mixes all this up and out comes music. That's what we do here.'&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's almost as if he waited for the anniversary. The world remembers the names of the men who set foot on the moon, but Chris Kraft was another hugely important person managing the hundreds of highly skilled engineers and scientists without whom the moon landing would not have been possible. &lt;/p&gt;
&lt;p&gt;We're fast approaching a time where there will be nobody left who was involved in project Apollo. It will never be forgotten, but it will be sad to no longer be remembered first hand. &lt;/p&gt;</content><category term="Space"></category></entry><entry><title>Self-Host Your Static Assets</title><link href="/2019/07/11/self-host-your-static-assets/" rel="alternate"></link><published>2019-07-11T00:00:00+01:00</published><updated>2019-07-11T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-07-11:/2019/07/11/self-host-your-static-assets/</id><summary type="html">&lt;p&gt;Harry Roberts, writing at &lt;em&gt;CSS Wizardry&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the quickest wins—and one of the first things I recommend my clients do—to make websites faster can at first seem counter-intuitive: you should self-host all of your static assets, forgoing others’ CDNs/infrastructure. In this short and hopefully very straightforward …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Harry Roberts, writing at &lt;em&gt;CSS Wizardry&lt;/em&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;One of the quickest wins—and one of the first things I recommend my clients do—to make websites faster can at first seem counter-intuitive: you should self-host all of your static assets, forgoing others’ CDNs/infrastructure. In this short and hopefully very straightforward post, I want to outline the disadvantages of hosting your static assets ‘off-site’, and the overwhelming benefits of hosting them on your own origin.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I'm a little late to this (the post was written back in May), but it's an interesting counter argument to the common practice of serving third party resources from a provider's CDN. The post goes into a lot more detail, but if you can, host it yourself. &lt;/p&gt;</content><category term="Development"></category><category term="Web"></category></entry><entry><title>The Two-Napkin Protocol</title><link href="/2019/07/07/the-two-napkin-protocol/" rel="alternate"></link><published>2019-07-07T00:00:00+01:00</published><updated>2019-07-07T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-07-07:/2019/07/07/the-two-napkin-protocol/</id><summary type="html">&lt;p&gt;An interesting piece of history I didn't previously know.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It was 1989. Kirk Lougheed of Cisco and Yakov Rekhter of IBM were having lunch in a meeting hall cafeteria at an Internet Engineering Task Force (IETF) conference.&lt;/p&gt;
&lt;p&gt;They wrote a new routing protocol that became RFC (Request for Comment) 1105 …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;An interesting piece of history I didn't previously know.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It was 1989. Kirk Lougheed of Cisco and Yakov Rekhter of IBM were having lunch in a meeting hall cafeteria at an Internet Engineering Task Force (IETF) conference.&lt;/p&gt;
&lt;p&gt;They wrote a new routing protocol that became RFC (Request for Comment) 1105, the &lt;a href="//tools.ietf.org/html/rfc1105"&gt;Border Gateway Protocol (BGP)&lt;/a&gt;, known to many as the “Two Napkin Protocol” — in reference to the napkins they used to capture their thoughts.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The post is worth a read just to see the photos of the napkins. I've never really thought before about how RFCs come to be. I'd always assumed they were the result of clever people in offices, not really thought up on the back of a napkin over drinks!&lt;/p&gt;
&lt;p&gt;Also, as it's 2019... happy 30th birthday, BGP (and the World Wide Web). &lt;/p&gt;</content><category term="Networking"></category><category term="BGP"></category></entry><entry><title>The Infrastructure Mess Causing Countless Internet Outages</title><link href="/2019/06/29/the-infrastructure-mess-causing-countless-internet-outages/" rel="alternate"></link><published>2019-06-29T00:00:00+01:00</published><updated>2019-06-29T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2019-06-29:/2019/06/29/the-infrastructure-mess-causing-countless-internet-outages/</id><summary type="html">&lt;p&gt;Roland Dobbins from Netscout Arbor, quoted in this &lt;em&gt;Wired&lt;/em&gt; article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Nonspecialists kind of view the internet as this high-tech, gleaming thing like the bridge of the starship Enterprise. It’s not like that at all. It’s more like an 18th-century Royal Navy frigate. There’s a lot of running …&lt;/p&gt;&lt;/blockquote&gt;</summary><content type="html">&lt;p&gt;Roland Dobbins from Netscout Arbor, quoted in this &lt;em&gt;Wired&lt;/em&gt; article:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;"Nonspecialists kind of view the internet as this high-tech, gleaming thing like the bridge of the starship Enterprise. It’s not like that at all. It’s more like an 18th-century Royal Navy frigate. There’s a lot of running around and screaming and shouting and pulling on ropes to try to get things going in the right direction."&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;It's amazing how fragile some of the technologies that power something the world takes for granted are; BGP is a great example of that. The Internet is everywhere, and it's becoming increasingly more necessary to be connected in order to be able to just go about our lives.&lt;/p&gt;
&lt;p&gt;Regarding the choice of headline, however, I don't think the word "mess" is fair. That does a disservice to the hundreds of very talented people that design, implement, and maintain the infrastructre that underpins our connected world. &lt;/p&gt;</content><category term="Networking"></category><category term="BGP"></category></entry><entry><title>Junos: Confirm a commit cleanly"</title><link href="/2018/07/27/junos-confirm-a-commit-cleanly/" rel="alternate"></link><published>2018-07-27T00:00:00+01:00</published><updated>2018-07-27T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2018-07-27:/2018/07/27/junos-confirm-a-commit-cleanly/</id><summary type="html">&lt;p&gt;For years, I have loved the fact that Junos allows you to perform a &lt;code&gt;commit confirmed&lt;/code&gt; to apply the configuration with an automatic rollback in a certain number of minutes.&lt;/p&gt;
&lt;p&gt;I have always believed that the only way to confirm the commit (i.e. stop the automatic rollback) was to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;For years, I have loved the fact that Junos allows you to perform a &lt;code&gt;commit confirmed&lt;/code&gt; to apply the configuration with an automatic rollback in a certain number of minutes.&lt;/p&gt;
&lt;p&gt;I have always believed that the only way to confirm the commit (i.e. stop the automatic rollback) was to &lt;code&gt;commit&lt;/code&gt; again. This creates two commits in the commit history, one containing the actual config diff, and an empty one purely used to stop the rollback. I've always thought that this creates a somewhat messy commit history, and confuses the use of &lt;code&gt;show | compare rollback&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;{% highlight bash %}
[edit]
ben@device&amp;gt; run show system commit
0   2018-07-27 08:44:26 BST by ben via cli
1   2018-07-27 08:44:07 BST by ben via cli commit confirmed, rollback in 5mins
2   2018-07-23 10:04:29 BST by ben via cli
3   2018-07-23 10:03:58 BST by ben via cli commit confirmed, rollback in 2mins&lt;/p&gt;
&lt;p&gt;[edit]
ben@device&amp;gt; show | compare rollback 1&lt;/p&gt;
&lt;p&gt;[edit]
ben@device&amp;gt; # Huh, it's empty?! I'm sure I did some work...&lt;/p&gt;
&lt;p&gt;[edit]
ben@device&amp;gt; show | compare rollback 2
[edit system]
-   host-name old-device
+   host-name device&lt;/p&gt;
&lt;p _="%" endhighlight&gt;[edit]
ben@device&amp;gt; # Oh, there it is...&lt;/p&gt;
&lt;p&gt;However, today I learnt that a &lt;code&gt;commit check&lt;/code&gt; is enough to stop the rollback, and doesn't create an empty commit! My commit histories are now much cleaner, and &lt;code&gt;show | compare rollback&lt;/code&gt; commands a lot easier to work out what you're actually looking at.&lt;/p&gt;
&lt;p&gt;{% highlight bash %}
[edit]
ben@device&amp;gt; run show system commit
1   2018-07-27 08:44:07 BST by ben via cli commit confirmed, rollback in 5mins
3   2018-07-23 10:03:58 BST by ben via cli commit confirmed, rollback in 2mins&lt;/p&gt;
&lt;p _="%" endhighlight&gt;[edit]
ben@device&amp;gt; show | compare rollback 1
[edit system]
-   host-name old-device
+   host-name device&lt;/p&gt;
&lt;p&gt;Much better!&lt;/p&gt;</content><category term="Networking"></category><category term="Junos"></category></entry><entry><title>Lessons Learnt from an Outage</title><link href="/2018/07/22/lessons-learnt-from-an-outage/" rel="alternate"></link><published>2018-07-22T00:00:00+01:00</published><updated>2018-07-22T00:00:00+01:00</updated><author><name>Ben Cardy</name></author><id>tag:None,2018-07-22:/2018/07/22/lessons-learnt-from-an-outage/</id><summary type="html">&lt;p&gt;I caused an outage last week. &lt;/p&gt;
&lt;p&gt;Not intentionally, and not a large outage by any stretch of the imagination. But it had various knock-on consequences that led to a lengthy application recovery time, long after full network connectivity was restored.&lt;/p&gt;
&lt;p&gt;We were replacing one of the two core MPLS routers …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I caused an outage last week. &lt;/p&gt;
&lt;p&gt;Not intentionally, and not a large outage by any stretch of the imagination. But it had various knock-on consequences that led to a lengthy application recovery time, long after full network connectivity was restored.&lt;/p&gt;
&lt;p&gt;We were replacing one of the two core MPLS routers at one of the three primary sites in our network. Upgrading the hardware to a newer model required costing the existing node out, powering it off, physically replacing it with the new hardware, and bringing the node back online.&lt;/p&gt;
&lt;p&gt;(For those of you interested in the details, we were upgrading a Juniper MX480 to an MX10003 - all logical connectivity was staying the same, but some links were being upgraded from 10Gbps to either 40 or 100).&lt;/p&gt;
&lt;p&gt;In preparation for the upgrade, I had taken the running config from the existing node, adapted what was necessary for the newer hardware (mainly interface name changes, etc) and preloaded it onto the new node waiting in the lab. So far so good.&lt;/p&gt;
&lt;p&gt;Unfortunately, the running config at the time I took it from the live node, was exactly that - the &lt;em&gt;live&lt;/em&gt; node. At that moment, it wasn't in its costed-out state, meaning that the minute we started repatching links into the new hardware, they were coming back live.&lt;/p&gt;
&lt;p&gt;These core node provide connectivity between our three primary sites, and their three data centres. As the links came up live, the new node started drawing traffic from the local data centre fabric before it had any connectivity to the other sites (or even the other node in the same site). This meant that for a period of around four minutes, between one sixth and one half of all egress traffic from the local data centre was being blackholed, and dropped.&lt;/p&gt;
&lt;p&gt;This caused connectivity issues between our ceph clusters, which then struggled to make sense of the situation, and filled up the only remaining link between this site and the others with traffic. (I don't know the full details of why it did this, or what that traffic was - I'm a network engineer, and not responsible for the rest of the infrastructure. But remember I said we were upgrading from 10 to 100Gbps on some links? This is partly why). This then exacerbated the connectivity problems (for other applications in addition to ceph), pinning the links at line rate long after the we had costed out the new node as originally intended, leading to the long recovery time for the application layer.&lt;/p&gt;
&lt;p&gt;So what did I learn from this outage? That's the most important question when something like this happens - particularly if it was your fault. This is what I learnt.&lt;/p&gt;
&lt;h3&gt;Don't become complacent&lt;/h3&gt;
&lt;p&gt;We had done this exact procedure for the other node in this site just days before, and all had gone smoothly (I had remembered to cost out the new node as I was preparing its config, instead of running with the live config from the existing node). Even if you've done an identical change before, &lt;em&gt;always&lt;/em&gt; triple check what you're doing if it has the potential to cause an impact on other parts of the business. Ideally, ask a colleague if they can spot anything you may have forgotten.&lt;/p&gt;
&lt;h3&gt;Unconditional summarisation isn't always a good thing&lt;/h3&gt;
&lt;p&gt;Even though the links weren't costed out, if all the core did was pass on routes learnt from the other sites, then the new node wouldn't have started drawing traffic until it was able to route it.§&lt;/p&gt;
&lt;p&gt;Instead, our core currently advertises three aggregate routes to its clients - the three private &lt;a href="https://tools.ietf.org/html/rfc1918"&gt;RFC1918&lt;/a&gt; ranges. These aggregates are active if just a single contributing route is present in the routing table. In our case, the core node's loopback is a perfectly valid contributing route to the 10.0.0.0/8 aggregate, causing it to be advertised even if every other link on the box was down, drawing (and dropping) traffic.&lt;/p&gt;
&lt;p&gt;Under normal circumstances, we'd obviously expect the core nodes to have full reachability to the rest of the core, and this wouldn't be an issue. However, certain failure scenarios can cause a node to become isolated (not just configuration mistakes like this one!) and blackhole traffic. Advertising more specific routes actually learnt from other peers, or some conditions imposed on the generation of the aggregate routes, would help limit this.&lt;/p&gt;
&lt;h3&gt;Be selective about the order links are repatched&lt;/h3&gt;
&lt;p&gt;Core-facing links first! The outage was caused by the fact that the links to the data centre fabric were connected before the core-facing links. If they had been done the other way around, and core connectivity as part of the MPLS domain was confirmed before connecting any client-facing links, the issue would have been avoided.&lt;/p&gt;
&lt;p&gt;Core-facing links are more important than client-facing - most clients will have redundancy via other nodes, and even if they don't, until your core node has reachability to the rest of the core, it's useless to its clients anyway.&lt;/p&gt;
&lt;h3&gt;Don't neglect CoS&lt;/h3&gt;
&lt;p&gt;While not directly related to the outage itself, ceph filling the links with non-essential traffic (compared to, say, production web or database traffic) led to outages on other applications that could no longer communicate. Some quality of service markings and traffic shaping or policing would have a gone a long way to mitigating the impact, by restricting non-business-critical traffic to a subset of the link. Less important (but still useful) on the upgraded 100Gbps connections; but our single 10Gbps like couldn't cope.&lt;/p&gt;</content><category term="Networking"></category></entry></feed>